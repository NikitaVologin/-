/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 113.0, "minX": 0.0, "maxY": 16462.0, "series": [{"data": [[0.0, 717.0], [0.1, 746.0], [0.2, 869.0], [0.3, 869.0], [0.4, 930.0], [0.5, 998.0], [0.6, 1005.0], [0.7, 1006.0], [0.8, 1017.0], [0.9, 1023.0], [1.0, 1024.0], [1.1, 1031.0], [1.2, 1033.0], [1.3, 1034.0], [1.4, 1034.0], [1.5, 1042.0], [1.6, 1052.0], [1.7, 1060.0], [1.8, 1069.0], [1.9, 1084.0], [2.0, 1087.0], [2.1, 1087.0], [2.2, 1087.0], [2.3, 1089.0], [2.4, 1089.0], [2.5, 1090.0], [2.6, 1098.0], [2.7, 1099.0], [2.8, 1101.0], [2.9, 1103.0], [3.0, 1110.0], [3.1, 1112.0], [3.2, 1112.0], [3.3, 1119.0], [3.4, 1121.0], [3.5, 1126.0], [3.6, 1126.0], [3.7, 1129.0], [3.8, 1130.0], [3.9, 1133.0], [4.0, 1137.0], [4.1, 1139.0], [4.2, 1149.0], [4.3, 1150.0], [4.4, 1153.0], [4.5, 1153.0], [4.6, 1156.0], [4.7, 1156.0], [4.8, 1161.0], [4.9, 1162.0], [5.0, 1162.0], [5.1, 1165.0], [5.2, 1169.0], [5.3, 1174.0], [5.4, 1175.0], [5.5, 1179.0], [5.6, 1180.0], [5.7, 1182.0], [5.8, 1183.0], [5.9, 1185.0], [6.0, 1186.0], [6.1, 1187.0], [6.2, 1189.0], [6.3, 1191.0], [6.4, 1197.0], [6.5, 1197.0], [6.6, 1200.0], [6.7, 1201.0], [6.8, 1201.0], [6.9, 1203.0], [7.0, 1203.0], [7.1, 1205.0], [7.2, 1207.0], [7.3, 1213.0], [7.4, 1219.0], [7.5, 1219.0], [7.6, 1222.0], [7.7, 1230.0], [7.8, 1230.0], [7.9, 1231.0], [8.0, 1233.0], [8.1, 1238.0], [8.2, 1239.0], [8.3, 1241.0], [8.4, 1242.0], [8.5, 1250.0], [8.6, 1252.0], [8.7, 1252.0], [8.8, 1253.0], [8.9, 1254.0], [9.0, 1256.0], [9.1, 1256.0], [9.2, 1257.0], [9.3, 1259.0], [9.4, 1260.0], [9.5, 1262.0], [9.6, 1262.0], [9.7, 1267.0], [9.8, 1267.0], [9.9, 1267.0], [10.0, 1270.0], [10.1, 1275.0], [10.2, 1278.0], [10.3, 1286.0], [10.4, 1287.0], [10.5, 1287.0], [10.6, 1288.0], [10.7, 1292.0], [10.8, 1297.0], [10.9, 1298.0], [11.0, 1304.0], [11.1, 1305.0], [11.2, 1305.0], [11.3, 1309.0], [11.4, 1309.0], [11.5, 1309.0], [11.6, 1309.0], [11.7, 1312.0], [11.8, 1312.0], [11.9, 1314.0], [12.0, 1314.0], [12.1, 1315.0], [12.2, 1320.0], [12.3, 1323.0], [12.4, 1323.0], [12.5, 1323.0], [12.6, 1323.0], [12.7, 1323.0], [12.8, 1326.0], [12.9, 1326.0], [13.0, 1328.0], [13.1, 1329.0], [13.2, 1335.0], [13.3, 1336.0], [13.4, 1343.0], [13.5, 1352.0], [13.6, 1360.0], [13.7, 1366.0], [13.8, 1369.0], [13.9, 1372.0], [14.0, 1376.0], [14.1, 1378.0], [14.2, 1378.0], [14.3, 1380.0], [14.4, 1380.0], [14.5, 1388.0], [14.6, 1395.0], [14.7, 1396.0], [14.8, 1396.0], [14.9, 1396.0], [15.0, 1398.0], [15.1, 1399.0], [15.2, 1401.0], [15.3, 1401.0], [15.4, 1403.0], [15.5, 1404.0], [15.6, 1406.0], [15.7, 1410.0], [15.8, 1414.0], [15.9, 1416.0], [16.0, 1418.0], [16.1, 1423.0], [16.2, 1427.0], [16.3, 1434.0], [16.4, 1434.0], [16.5, 1438.0], [16.6, 1438.0], [16.7, 1439.0], [16.8, 1446.0], [16.9, 1447.0], [17.0, 1447.0], [17.1, 1449.0], [17.2, 1450.0], [17.3, 1455.0], [17.4, 1465.0], [17.5, 1470.0], [17.6, 1473.0], [17.7, 1475.0], [17.8, 1478.0], [17.9, 1478.0], [18.0, 1480.0], [18.1, 1484.0], [18.2, 1485.0], [18.3, 1488.0], [18.4, 1490.0], [18.5, 1493.0], [18.6, 1493.0], [18.7, 1495.0], [18.8, 1500.0], [18.9, 1501.0], [19.0, 1502.0], [19.1, 1504.0], [19.2, 1509.0], [19.3, 1511.0], [19.4, 1511.0], [19.5, 1513.0], [19.6, 1527.0], [19.7, 1529.0], [19.8, 1540.0], [19.9, 1541.0], [20.0, 1544.0], [20.1, 1545.0], [20.2, 1546.0], [20.3, 1550.0], [20.4, 1556.0], [20.5, 1556.0], [20.6, 1558.0], [20.7, 1560.0], [20.8, 1566.0], [20.9, 1570.0], [21.0, 1572.0], [21.1, 1576.0], [21.2, 1577.0], [21.3, 1582.0], [21.4, 1582.0], [21.5, 1583.0], [21.6, 1584.0], [21.7, 1586.0], [21.8, 1592.0], [21.9, 1593.0], [22.0, 1607.0], [22.1, 1616.0], [22.2, 1618.0], [22.3, 1619.0], [22.4, 1621.0], [22.5, 1622.0], [22.6, 1624.0], [22.7, 1626.0], [22.8, 1629.0], [22.9, 1630.0], [23.0, 1633.0], [23.1, 1635.0], [23.2, 1635.0], [23.3, 1640.0], [23.4, 1644.0], [23.5, 1645.0], [23.6, 1647.0], [23.7, 1648.0], [23.8, 1662.0], [23.9, 1666.0], [24.0, 1673.0], [24.1, 1682.0], [24.2, 1685.0], [24.3, 1687.0], [24.4, 1693.0], [24.5, 1697.0], [24.6, 1701.0], [24.7, 1709.0], [24.8, 1713.0], [24.9, 1714.0], [25.0, 1721.0], [25.1, 1721.0], [25.2, 1731.0], [25.3, 1733.0], [25.4, 1736.0], [25.5, 1738.0], [25.6, 1740.0], [25.7, 1744.0], [25.8, 1745.0], [25.9, 1746.0], [26.0, 1746.0], [26.1, 1751.0], [26.2, 1754.0], [26.3, 1755.0], [26.4, 1759.0], [26.5, 1779.0], [26.6, 1783.0], [26.7, 1788.0], [26.8, 1793.0], [26.9, 1795.0], [27.0, 1810.0], [27.1, 1811.0], [27.2, 1813.0], [27.3, 1814.0], [27.4, 1819.0], [27.5, 1819.0], [27.6, 1822.0], [27.7, 1834.0], [27.8, 1842.0], [27.9, 1845.0], [28.0, 1845.0], [28.1, 1847.0], [28.2, 1847.0], [28.3, 1853.0], [28.4, 1856.0], [28.5, 1861.0], [28.6, 1863.0], [28.7, 1866.0], [28.8, 1871.0], [28.9, 1872.0], [29.0, 1874.0], [29.1, 1875.0], [29.2, 1878.0], [29.3, 1886.0], [29.4, 1886.0], [29.5, 1887.0], [29.6, 1889.0], [29.7, 1893.0], [29.8, 1894.0], [29.9, 1895.0], [30.0, 1898.0], [30.1, 1907.0], [30.2, 1909.0], [30.3, 1923.0], [30.4, 1931.0], [30.5, 1933.0], [30.6, 1948.0], [30.7, 1950.0], [30.8, 1964.0], [30.9, 1966.0], [31.0, 1968.0], [31.1, 1983.0], [31.2, 1985.0], [31.3, 1985.0], [31.4, 1988.0], [31.5, 1994.0], [31.6, 1997.0], [31.7, 1998.0], [31.8, 2007.0], [31.9, 2010.0], [32.0, 2024.0], [32.1, 2028.0], [32.2, 2030.0], [32.3, 2030.0], [32.4, 2032.0], [32.5, 2049.0], [32.6, 2063.0], [32.7, 2068.0], [32.8, 2075.0], [32.9, 2075.0], [33.0, 2077.0], [33.1, 2088.0], [33.2, 2100.0], [33.3, 2112.0], [33.4, 2113.0], [33.5, 2115.0], [33.6, 2121.0], [33.7, 2124.0], [33.8, 2133.0], [33.9, 2136.0], [34.0, 2141.0], [34.1, 2147.0], [34.2, 2148.0], [34.3, 2151.0], [34.4, 2175.0], [34.5, 2179.0], [34.6, 2181.0], [34.7, 2194.0], [34.8, 2196.0], [34.9, 2197.0], [35.0, 2198.0], [35.1, 2216.0], [35.2, 2224.0], [35.3, 2253.0], [35.4, 2274.0], [35.5, 2283.0], [35.6, 2284.0], [35.7, 2292.0], [35.8, 2294.0], [35.9, 2294.0], [36.0, 2297.0], [36.1, 2309.0], [36.2, 2311.0], [36.3, 2313.0], [36.4, 2313.0], [36.5, 2314.0], [36.6, 2318.0], [36.7, 2326.0], [36.8, 2331.0], [36.9, 2331.0], [37.0, 2349.0], [37.1, 2351.0], [37.2, 2355.0], [37.3, 2356.0], [37.4, 2362.0], [37.5, 2366.0], [37.6, 2375.0], [37.7, 2389.0], [37.8, 2404.0], [37.9, 2417.0], [38.0, 2421.0], [38.1, 2436.0], [38.2, 2441.0], [38.3, 2443.0], [38.4, 2451.0], [38.5, 2456.0], [38.6, 2472.0], [38.7, 2474.0], [38.8, 2483.0], [38.9, 2489.0], [39.0, 2490.0], [39.1, 2492.0], [39.2, 2500.0], [39.3, 2502.0], [39.4, 2504.0], [39.5, 2515.0], [39.6, 2518.0], [39.7, 2532.0], [39.8, 2535.0], [39.9, 2541.0], [40.0, 2546.0], [40.1, 2549.0], [40.2, 2555.0], [40.3, 2566.0], [40.4, 2573.0], [40.5, 2578.0], [40.6, 2580.0], [40.7, 2583.0], [40.8, 2583.0], [40.9, 2591.0], [41.0, 2598.0], [41.1, 2603.0], [41.2, 2608.0], [41.3, 2618.0], [41.4, 2639.0], [41.5, 2647.0], [41.6, 2673.0], [41.7, 2690.0], [41.8, 2697.0], [41.9, 2701.0], [42.0, 2724.0], [42.1, 2725.0], [42.2, 2725.0], [42.3, 2746.0], [42.4, 2761.0], [42.5, 2768.0], [42.6, 2771.0], [42.7, 2789.0], [42.8, 2809.0], [42.9, 2812.0], [43.0, 2818.0], [43.1, 2831.0], [43.2, 2833.0], [43.3, 2835.0], [43.4, 2850.0], [43.5, 2854.0], [43.6, 2856.0], [43.7, 2881.0], [43.8, 2904.0], [43.9, 2915.0], [44.0, 2921.0], [44.1, 2960.0], [44.2, 2978.0], [44.3, 2987.0], [44.4, 3001.0], [44.5, 3015.0], [44.6, 3021.0], [44.7, 3036.0], [44.8, 3037.0], [44.9, 3041.0], [45.0, 3051.0], [45.1, 3052.0], [45.2, 3099.0], [45.3, 3100.0], [45.4, 3104.0], [45.5, 3134.0], [45.6, 3143.0], [45.7, 3158.0], [45.8, 3171.0], [45.9, 3194.0], [46.0, 3204.0], [46.1, 3211.0], [46.2, 3218.0], [46.3, 3247.0], [46.4, 3301.0], [46.5, 3310.0], [46.6, 3322.0], [46.7, 3324.0], [46.8, 3328.0], [46.9, 3346.0], [47.0, 3353.0], [47.1, 3359.0], [47.2, 3377.0], [47.3, 3381.0], [47.4, 3401.0], [47.5, 3450.0], [47.6, 3496.0], [47.7, 3497.0], [47.8, 3503.0], [47.9, 3517.0], [48.0, 3527.0], [48.1, 3530.0], [48.2, 3541.0], [48.3, 3550.0], [48.4, 3570.0], [48.5, 3582.0], [48.6, 3587.0], [48.7, 3588.0], [48.8, 3593.0], [48.9, 3607.0], [49.0, 3611.0], [49.1, 3626.0], [49.2, 3630.0], [49.3, 3636.0], [49.4, 3644.0], [49.5, 3666.0], [49.6, 3686.0], [49.7, 3687.0], [49.8, 3735.0], [49.9, 3735.0], [50.0, 3753.0], [50.1, 3763.0], [50.2, 3797.0], [50.3, 3824.0], [50.4, 3838.0], [50.5, 3839.0], [50.6, 3857.0], [50.7, 3862.0], [50.8, 3863.0], [50.9, 3868.0], [51.0, 3873.0], [51.1, 3884.0], [51.2, 3887.0], [51.3, 3895.0], [51.4, 3918.0], [51.5, 3930.0], [51.6, 3942.0], [51.7, 3958.0], [51.8, 3960.0], [51.9, 3968.0], [52.0, 3981.0], [52.1, 3990.0], [52.2, 3992.0], [52.3, 3996.0], [52.4, 4057.0], [52.5, 4065.0], [52.6, 4091.0], [52.7, 4095.0], [52.8, 4103.0], [52.9, 4145.0], [53.0, 4153.0], [53.1, 4178.0], [53.2, 4187.0], [53.3, 4190.0], [53.4, 4192.0], [53.5, 4197.0], [53.6, 4208.0], [53.7, 4215.0], [53.8, 4227.0], [53.9, 4241.0], [54.0, 4249.0], [54.1, 4262.0], [54.2, 4266.0], [54.3, 4267.0], [54.4, 4277.0], [54.5, 4288.0], [54.6, 4306.0], [54.7, 4329.0], [54.8, 4336.0], [54.9, 4336.0], [55.0, 4364.0], [55.1, 4367.0], [55.2, 4403.0], [55.3, 4404.0], [55.4, 4410.0], [55.5, 4428.0], [55.6, 4464.0], [55.7, 4484.0], [55.8, 4501.0], [55.9, 4501.0], [56.0, 4503.0], [56.1, 4512.0], [56.2, 4514.0], [56.3, 4516.0], [56.4, 4526.0], [56.5, 4528.0], [56.6, 4548.0], [56.7, 4556.0], [56.8, 4591.0], [56.9, 4599.0], [57.0, 4616.0], [57.1, 4640.0], [57.2, 4641.0], [57.3, 4644.0], [57.4, 4660.0], [57.5, 4674.0], [57.6, 4677.0], [57.7, 4692.0], [57.8, 4730.0], [57.9, 4741.0], [58.0, 4743.0], [58.1, 4743.0], [58.2, 4755.0], [58.3, 4762.0], [58.4, 4773.0], [58.5, 4777.0], [58.6, 4793.0], [58.7, 4807.0], [58.8, 4808.0], [58.9, 4812.0], [59.0, 4820.0], [59.1, 4836.0], [59.2, 4844.0], [59.3, 4846.0], [59.4, 4864.0], [59.5, 4871.0], [59.6, 4874.0], [59.7, 4880.0], [59.8, 4890.0], [59.9, 4930.0], [60.0, 4956.0], [60.1, 4968.0], [60.2, 4969.0], [60.3, 4982.0], [60.4, 4988.0], [60.5, 4993.0], [60.6, 5008.0], [60.7, 5023.0], [60.8, 5025.0], [60.9, 5032.0], [61.0, 5037.0], [61.1, 5061.0], [61.2, 5099.0], [61.3, 5107.0], [61.4, 5108.0], [61.5, 5139.0], [61.6, 5151.0], [61.7, 5155.0], [61.8, 5174.0], [61.9, 5203.0], [62.0, 5211.0], [62.1, 5225.0], [62.2, 5247.0], [62.3, 5270.0], [62.4, 5287.0], [62.5, 5315.0], [62.6, 5322.0], [62.7, 5333.0], [62.8, 5383.0], [62.9, 5385.0], [63.0, 5408.0], [63.1, 5410.0], [63.2, 5423.0], [63.3, 5424.0], [63.4, 5439.0], [63.5, 5447.0], [63.6, 5508.0], [63.7, 5523.0], [63.8, 5534.0], [63.9, 5541.0], [64.0, 5572.0], [64.1, 5573.0], [64.2, 5578.0], [64.3, 5579.0], [64.4, 5583.0], [64.5, 5592.0], [64.6, 5608.0], [64.7, 5623.0], [64.8, 5681.0], [64.9, 5687.0], [65.0, 5687.0], [65.1, 5690.0], [65.2, 5695.0], [65.3, 5697.0], [65.4, 5709.0], [65.5, 5720.0], [65.6, 5736.0], [65.7, 5742.0], [65.8, 5747.0], [65.9, 5748.0], [66.0, 5793.0], [66.1, 5796.0], [66.2, 5806.0], [66.3, 5828.0], [66.4, 5840.0], [66.5, 5843.0], [66.6, 5849.0], [66.7, 5861.0], [66.8, 5875.0], [66.9, 5876.0], [67.0, 5883.0], [67.1, 5886.0], [67.2, 5892.0], [67.3, 5898.0], [67.4, 5903.0], [67.5, 5903.0], [67.6, 5910.0], [67.7, 5914.0], [67.8, 5928.0], [67.9, 5947.0], [68.0, 5960.0], [68.1, 5961.0], [68.2, 5962.0], [68.3, 5974.0], [68.4, 5985.0], [68.5, 6013.0], [68.6, 6022.0], [68.7, 6025.0], [68.8, 6036.0], [68.9, 6043.0], [69.0, 6050.0], [69.1, 6059.0], [69.2, 6079.0], [69.3, 6115.0], [69.4, 6124.0], [69.5, 6126.0], [69.6, 6144.0], [69.7, 6155.0], [69.8, 6156.0], [69.9, 6157.0], [70.0, 6159.0], [70.1, 6165.0], [70.2, 6169.0], [70.3, 6171.0], [70.4, 6171.0], [70.5, 6178.0], [70.6, 6208.0], [70.7, 6234.0], [70.8, 6235.0], [70.9, 6236.0], [71.0, 6266.0], [71.1, 6288.0], [71.2, 6309.0], [71.3, 6321.0], [71.4, 6326.0], [71.5, 6342.0], [71.6, 6343.0], [71.7, 6347.0], [71.8, 6351.0], [71.9, 6358.0], [72.0, 6359.0], [72.1, 6378.0], [72.2, 6383.0], [72.3, 6389.0], [72.4, 6393.0], [72.5, 6398.0], [72.6, 6401.0], [72.7, 6404.0], [72.8, 6411.0], [72.9, 6415.0], [73.0, 6416.0], [73.1, 6428.0], [73.2, 6432.0], [73.3, 6459.0], [73.4, 6464.0], [73.5, 6486.0], [73.6, 6493.0], [73.7, 6509.0], [73.8, 6510.0], [73.9, 6511.0], [74.0, 6514.0], [74.1, 6518.0], [74.2, 6538.0], [74.3, 6541.0], [74.4, 6546.0], [74.5, 6565.0], [74.6, 6587.0], [74.7, 6606.0], [74.8, 6630.0], [74.9, 6639.0], [75.0, 6653.0], [75.1, 6687.0], [75.2, 6692.0], [75.3, 6694.0], [75.4, 6696.0], [75.5, 6703.0], [75.6, 6715.0], [75.7, 6747.0], [75.8, 6773.0], [75.9, 6781.0], [76.0, 6799.0], [76.1, 6800.0], [76.2, 6803.0], [76.3, 6804.0], [76.4, 6806.0], [76.5, 6807.0], [76.6, 6848.0], [76.7, 6862.0], [76.8, 6883.0], [76.9, 6884.0], [77.0, 6914.0], [77.1, 6916.0], [77.2, 6934.0], [77.3, 6944.0], [77.4, 6958.0], [77.5, 6959.0], [77.6, 6991.0], [77.7, 6999.0], [77.8, 6999.0], [77.9, 7020.0], [78.0, 7027.0], [78.1, 7046.0], [78.2, 7111.0], [78.3, 7127.0], [78.4, 7143.0], [78.5, 7160.0], [78.6, 7175.0], [78.7, 7180.0], [78.8, 7181.0], [78.9, 7193.0], [79.0, 7201.0], [79.1, 7202.0], [79.2, 7210.0], [79.3, 7223.0], [79.4, 7225.0], [79.5, 7272.0], [79.6, 7279.0], [79.7, 7312.0], [79.8, 7330.0], [79.9, 7335.0], [80.0, 7335.0], [80.1, 7338.0], [80.2, 7347.0], [80.3, 7359.0], [80.4, 7364.0], [80.5, 7387.0], [80.6, 7399.0], [80.7, 7417.0], [80.8, 7423.0], [80.9, 7425.0], [81.0, 7446.0], [81.1, 7456.0], [81.2, 7464.0], [81.3, 7477.0], [81.4, 7489.0], [81.5, 7490.0], [81.6, 7568.0], [81.7, 7572.0], [81.8, 7581.0], [81.9, 7586.0], [82.0, 7586.0], [82.1, 7598.0], [82.2, 7606.0], [82.3, 7640.0], [82.4, 7660.0], [82.5, 7664.0], [82.6, 7680.0], [82.7, 7697.0], [82.8, 7702.0], [82.9, 7705.0], [83.0, 7711.0], [83.1, 7713.0], [83.2, 7713.0], [83.3, 7735.0], [83.4, 7740.0], [83.5, 7771.0], [83.6, 7783.0], [83.7, 7798.0], [83.8, 7801.0], [83.9, 7802.0], [84.0, 7809.0], [84.1, 7844.0], [84.2, 7859.0], [84.3, 7890.0], [84.4, 7894.0], [84.5, 7920.0], [84.6, 7955.0], [84.7, 7965.0], [84.8, 7975.0], [84.9, 7976.0], [85.0, 7981.0], [85.1, 8039.0], [85.2, 8045.0], [85.3, 8049.0], [85.4, 8074.0], [85.5, 8104.0], [85.6, 8125.0], [85.7, 8160.0], [85.8, 8179.0], [85.9, 8200.0], [86.0, 8220.0], [86.1, 8220.0], [86.2, 8220.0], [86.3, 8237.0], [86.4, 8241.0], [86.5, 8277.0], [86.6, 8281.0], [86.7, 8297.0], [86.8, 8303.0], [86.9, 8373.0], [87.0, 8377.0], [87.1, 8395.0], [87.2, 8424.0], [87.3, 8433.0], [87.4, 8440.0], [87.5, 8441.0], [87.6, 8486.0], [87.7, 8496.0], [87.8, 8590.0], [87.9, 8598.0], [88.0, 8619.0], [88.1, 8685.0], [88.2, 8711.0], [88.3, 8768.0], [88.4, 8773.0], [88.5, 8805.0], [88.6, 8806.0], [88.7, 8811.0], [88.8, 8920.0], [88.9, 8923.0], [89.0, 8953.0], [89.1, 8968.0], [89.2, 9011.0], [89.3, 9057.0], [89.4, 9066.0], [89.5, 9097.0], [89.6, 9105.0], [89.7, 9132.0], [89.8, 9205.0], [89.9, 9388.0], [90.0, 9390.0], [90.1, 9428.0], [90.2, 9438.0], [90.3, 9487.0], [90.4, 9505.0], [90.5, 9508.0], [90.6, 9539.0], [90.7, 9566.0], [90.8, 9568.0], [90.9, 9617.0], [91.0, 9618.0], [91.1, 9675.0], [91.2, 9676.0], [91.3, 9721.0], [91.4, 9729.0], [91.5, 9743.0], [91.6, 9799.0], [91.7, 9812.0], [91.8, 9917.0], [91.9, 9922.0], [92.0, 9958.0], [92.1, 9969.0], [92.2, 9991.0], [92.3, 9998.0], [92.4, 10006.0], [92.5, 10041.0], [92.6, 10055.0], [92.7, 10067.0], [92.8, 10089.0], [92.9, 10136.0], [93.0, 10154.0], [93.1, 10159.0], [93.2, 10256.0], [93.3, 10256.0], [93.4, 10257.0], [93.5, 10292.0], [93.6, 10319.0], [93.7, 10327.0], [93.8, 10386.0], [93.9, 10395.0], [94.0, 10413.0], [94.1, 10530.0], [94.2, 10552.0], [94.3, 10559.0], [94.4, 10587.0], [94.5, 10617.0], [94.6, 10628.0], [94.7, 10659.0], [94.8, 10671.0], [94.9, 10715.0], [95.0, 10727.0], [95.1, 10739.0], [95.2, 10753.0], [95.3, 10772.0], [95.4, 10789.0], [95.5, 10808.0], [95.6, 10896.0], [95.7, 10936.0], [95.8, 11000.0], [95.9, 11027.0], [96.0, 11044.0], [96.1, 11114.0], [96.2, 11182.0], [96.3, 11189.0], [96.4, 11189.0], [96.5, 11220.0], [96.6, 11243.0], [96.7, 11303.0], [96.8, 11320.0], [96.9, 11372.0], [97.0, 11388.0], [97.1, 11505.0], [97.2, 11619.0], [97.3, 11682.0], [97.4, 11685.0], [97.5, 11704.0], [97.6, 11827.0], [97.7, 11884.0], [97.8, 11930.0], [97.9, 12052.0], [98.0, 12067.0], [98.1, 12159.0], [98.2, 12219.0], [98.3, 12239.0], [98.4, 12348.0], [98.5, 12420.0], [98.6, 12524.0], [98.7, 12595.0], [98.8, 12682.0], [98.9, 12990.0], [99.0, 13075.0], [99.1, 13087.0], [99.2, 13376.0], [99.3, 13435.0], [99.4, 13610.0], [99.5, 13648.0], [99.6, 13906.0], [99.7, 15290.0], [99.8, 15652.0], [99.9, 16226.0]], "isOverall": false, "label": "HTTP Request-1", "isController": false}, {"data": [[0.0, 113.0], [0.1, 117.0], [0.2, 118.0], [0.3, 118.0], [0.4, 119.0], [0.5, 119.0], [0.6, 119.0], [0.7, 120.0], [0.8, 120.0], [0.9, 120.0], [1.0, 120.0], [1.1, 121.0], [1.2, 121.0], [1.3, 121.0], [1.4, 121.0], [1.5, 122.0], [1.6, 122.0], [1.7, 122.0], [1.8, 123.0], [1.9, 123.0], [2.0, 123.0], [2.1, 124.0], [2.2, 124.0], [2.3, 124.0], [2.4, 124.0], [2.5, 125.0], [2.6, 125.0], [2.7, 125.0], [2.8, 125.0], [2.9, 125.0], [3.0, 126.0], [3.1, 126.0], [3.2, 126.0], [3.3, 127.0], [3.4, 127.0], [3.5, 127.0], [3.6, 128.0], [3.7, 128.0], [3.8, 128.0], [3.9, 129.0], [4.0, 129.0], [4.1, 130.0], [4.2, 131.0], [4.3, 131.0], [4.4, 132.0], [4.5, 132.0], [4.6, 132.0], [4.7, 133.0], [4.8, 133.0], [4.9, 134.0], [5.0, 135.0], [5.1, 135.0], [5.2, 136.0], [5.3, 136.0], [5.4, 136.0], [5.5, 137.0], [5.6, 137.0], [5.7, 138.0], [5.8, 139.0], [5.9, 140.0], [6.0, 141.0], [6.1, 141.0], [6.2, 141.0], [6.3, 142.0], [6.4, 143.0], [6.5, 150.0], [6.6, 153.0], [6.7, 154.0], [6.8, 155.0], [6.9, 156.0], [7.0, 156.0], [7.1, 156.0], [7.2, 156.0], [7.3, 156.0], [7.4, 157.0], [7.5, 159.0], [7.6, 159.0], [7.7, 160.0], [7.8, 160.0], [7.9, 161.0], [8.0, 162.0], [8.1, 162.0], [8.2, 163.0], [8.3, 164.0], [8.4, 164.0], [8.5, 164.0], [8.6, 164.0], [8.7, 165.0], [8.8, 165.0], [8.9, 165.0], [9.0, 165.0], [9.1, 166.0], [9.2, 167.0], [9.3, 169.0], [9.4, 170.0], [9.5, 170.0], [9.6, 171.0], [9.7, 171.0], [9.8, 172.0], [9.9, 173.0], [10.0, 173.0], [10.1, 173.0], [10.2, 174.0], [10.3, 175.0], [10.4, 175.0], [10.5, 175.0], [10.6, 175.0], [10.7, 176.0], [10.8, 176.0], [10.9, 177.0], [11.0, 178.0], [11.1, 178.0], [11.2, 178.0], [11.3, 180.0], [11.4, 180.0], [11.5, 180.0], [11.6, 180.0], [11.7, 181.0], [11.8, 182.0], [11.9, 182.0], [12.0, 183.0], [12.1, 183.0], [12.2, 184.0], [12.3, 184.0], [12.4, 184.0], [12.5, 185.0], [12.6, 185.0], [12.7, 191.0], [12.8, 192.0], [12.9, 192.0], [13.0, 193.0], [13.1, 199.0], [13.2, 201.0], [13.3, 202.0], [13.4, 202.0], [13.5, 203.0], [13.6, 204.0], [13.7, 204.0], [13.8, 204.0], [13.9, 205.0], [14.0, 205.0], [14.1, 206.0], [14.2, 206.0], [14.3, 206.0], [14.4, 207.0], [14.5, 207.0], [14.6, 208.0], [14.7, 208.0], [14.8, 208.0], [14.9, 208.0], [15.0, 209.0], [15.1, 210.0], [15.2, 210.0], [15.3, 210.0], [15.4, 210.0], [15.5, 210.0], [15.6, 210.0], [15.7, 210.0], [15.8, 211.0], [15.9, 212.0], [16.0, 212.0], [16.1, 212.0], [16.2, 212.0], [16.3, 212.0], [16.4, 212.0], [16.5, 213.0], [16.6, 213.0], [16.7, 214.0], [16.8, 214.0], [16.9, 214.0], [17.0, 214.0], [17.1, 214.0], [17.2, 215.0], [17.3, 215.0], [17.4, 215.0], [17.5, 215.0], [17.6, 215.0], [17.7, 215.0], [17.8, 216.0], [17.9, 216.0], [18.0, 216.0], [18.1, 216.0], [18.2, 217.0], [18.3, 217.0], [18.4, 217.0], [18.5, 218.0], [18.6, 218.0], [18.7, 218.0], [18.8, 218.0], [18.9, 218.0], [19.0, 219.0], [19.1, 219.0], [19.2, 219.0], [19.3, 219.0], [19.4, 219.0], [19.5, 219.0], [19.6, 219.0], [19.7, 219.0], [19.8, 220.0], [19.9, 220.0], [20.0, 220.0], [20.1, 220.0], [20.2, 220.0], [20.3, 220.0], [20.4, 220.0], [20.5, 220.0], [20.6, 220.0], [20.7, 220.0], [20.8, 220.0], [20.9, 220.0], [21.0, 220.0], [21.1, 220.0], [21.2, 220.0], [21.3, 220.0], [21.4, 220.0], [21.5, 221.0], [21.6, 221.0], [21.7, 221.0], [21.8, 221.0], [21.9, 221.0], [22.0, 221.0], [22.1, 221.0], [22.2, 221.0], [22.3, 221.0], [22.4, 221.0], [22.5, 221.0], [22.6, 221.0], [22.7, 221.0], [22.8, 222.0], [22.9, 222.0], [23.0, 222.0], [23.1, 222.0], [23.2, 222.0], [23.3, 222.0], [23.4, 222.0], [23.5, 223.0], [23.6, 223.0], [23.7, 223.0], [23.8, 223.0], [23.9, 223.0], [24.0, 224.0], [24.1, 224.0], [24.2, 224.0], [24.3, 224.0], [24.4, 224.0], [24.5, 224.0], [24.6, 224.0], [24.7, 224.0], [24.8, 224.0], [24.9, 224.0], [25.0, 224.0], [25.1, 224.0], [25.2, 225.0], [25.3, 225.0], [25.4, 225.0], [25.5, 225.0], [25.6, 225.0], [25.7, 225.0], [25.8, 225.0], [25.9, 225.0], [26.0, 225.0], [26.1, 225.0], [26.2, 225.0], [26.3, 225.0], [26.4, 225.0], [26.5, 225.0], [26.6, 225.0], [26.7, 226.0], [26.8, 226.0], [26.9, 226.0], [27.0, 226.0], [27.1, 226.0], [27.2, 226.0], [27.3, 226.0], [27.4, 226.0], [27.5, 227.0], [27.6, 227.0], [27.7, 227.0], [27.8, 227.0], [27.9, 227.0], [28.0, 227.0], [28.1, 227.0], [28.2, 227.0], [28.3, 227.0], [28.4, 227.0], [28.5, 227.0], [28.6, 227.0], [28.7, 227.0], [28.8, 227.0], [28.9, 228.0], [29.0, 228.0], [29.1, 228.0], [29.2, 228.0], [29.3, 228.0], [29.4, 228.0], [29.5, 228.0], [29.6, 228.0], [29.7, 228.0], [29.8, 228.0], [29.9, 228.0], [30.0, 228.0], [30.1, 228.0], [30.2, 228.0], [30.3, 228.0], [30.4, 229.0], [30.5, 229.0], [30.6, 229.0], [30.7, 229.0], [30.8, 229.0], [30.9, 229.0], [31.0, 230.0], [31.1, 230.0], [31.2, 230.0], [31.3, 230.0], [31.4, 230.0], [31.5, 230.0], [31.6, 230.0], [31.7, 230.0], [31.8, 230.0], [31.9, 230.0], [32.0, 230.0], [32.1, 230.0], [32.2, 230.0], [32.3, 230.0], [32.4, 230.0], [32.5, 230.0], [32.6, 231.0], [32.7, 231.0], [32.8, 231.0], [32.9, 231.0], [33.0, 231.0], [33.1, 231.0], [33.2, 232.0], [33.3, 232.0], [33.4, 232.0], [33.5, 232.0], [33.6, 232.0], [33.7, 232.0], [33.8, 232.0], [33.9, 232.0], [34.0, 232.0], [34.1, 232.0], [34.2, 232.0], [34.3, 232.0], [34.4, 232.0], [34.5, 233.0], [34.6, 233.0], [34.7, 233.0], [34.8, 233.0], [34.9, 233.0], [35.0, 233.0], [35.1, 233.0], [35.2, 233.0], [35.3, 233.0], [35.4, 233.0], [35.5, 233.0], [35.6, 233.0], [35.7, 233.0], [35.8, 233.0], [35.9, 233.0], [36.0, 233.0], [36.1, 233.0], [36.2, 233.0], [36.3, 233.0], [36.4, 233.0], [36.5, 233.0], [36.6, 233.0], [36.7, 233.0], [36.8, 234.0], [36.9, 234.0], [37.0, 234.0], [37.1, 234.0], [37.2, 234.0], [37.3, 234.0], [37.4, 234.0], [37.5, 234.0], [37.6, 234.0], [37.7, 234.0], [37.8, 234.0], [37.9, 234.0], [38.0, 234.0], [38.1, 234.0], [38.2, 235.0], [38.3, 235.0], [38.4, 235.0], [38.5, 235.0], [38.6, 235.0], [38.7, 235.0], [38.8, 235.0], [38.9, 235.0], [39.0, 235.0], [39.1, 235.0], [39.2, 236.0], [39.3, 236.0], [39.4, 236.0], [39.5, 236.0], [39.6, 236.0], [39.7, 236.0], [39.8, 236.0], [39.9, 236.0], [40.0, 236.0], [40.1, 236.0], [40.2, 236.0], [40.3, 236.0], [40.4, 237.0], [40.5, 237.0], [40.6, 237.0], [40.7, 237.0], [40.8, 237.0], [40.9, 238.0], [41.0, 238.0], [41.1, 238.0], [41.2, 238.0], [41.3, 238.0], [41.4, 238.0], [41.5, 238.0], [41.6, 238.0], [41.7, 238.0], [41.8, 238.0], [41.9, 238.0], [42.0, 238.0], [42.1, 238.0], [42.2, 239.0], [42.3, 239.0], [42.4, 239.0], [42.5, 239.0], [42.6, 239.0], [42.7, 239.0], [42.8, 239.0], [42.9, 239.0], [43.0, 239.0], [43.1, 239.0], [43.2, 239.0], [43.3, 239.0], [43.4, 240.0], [43.5, 240.0], [43.6, 240.0], [43.7, 240.0], [43.8, 240.0], [43.9, 240.0], [44.0, 240.0], [44.1, 240.0], [44.2, 240.0], [44.3, 241.0], [44.4, 241.0], [44.5, 241.0], [44.6, 241.0], [44.7, 241.0], [44.8, 241.0], [44.9, 241.0], [45.0, 241.0], [45.1, 241.0], [45.2, 241.0], [45.3, 241.0], [45.4, 242.0], [45.5, 242.0], [45.6, 242.0], [45.7, 242.0], [45.8, 242.0], [45.9, 242.0], [46.0, 243.0], [46.1, 243.0], [46.2, 243.0], [46.3, 243.0], [46.4, 243.0], [46.5, 243.0], [46.6, 243.0], [46.7, 243.0], [46.8, 243.0], [46.9, 244.0], [47.0, 244.0], [47.1, 244.0], [47.2, 244.0], [47.3, 244.0], [47.4, 244.0], [47.5, 244.0], [47.6, 244.0], [47.7, 244.0], [47.8, 245.0], [47.9, 245.0], [48.0, 245.0], [48.1, 245.0], [48.2, 245.0], [48.3, 245.0], [48.4, 245.0], [48.5, 245.0], [48.6, 245.0], [48.7, 245.0], [48.8, 246.0], [48.9, 246.0], [49.0, 246.0], [49.1, 246.0], [49.2, 246.0], [49.3, 246.0], [49.4, 246.0], [49.5, 246.0], [49.6, 246.0], [49.7, 247.0], [49.8, 247.0], [49.9, 247.0], [50.0, 247.0], [50.1, 247.0], [50.2, 247.0], [50.3, 247.0], [50.4, 247.0], [50.5, 247.0], [50.6, 247.0], [50.7, 248.0], [50.8, 248.0], [50.9, 248.0], [51.0, 248.0], [51.1, 248.0], [51.2, 248.0], [51.3, 249.0], [51.4, 249.0], [51.5, 249.0], [51.6, 249.0], [51.7, 249.0], [51.8, 250.0], [51.9, 250.0], [52.0, 250.0], [52.1, 250.0], [52.2, 250.0], [52.3, 250.0], [52.4, 251.0], [52.5, 251.0], [52.6, 252.0], [52.7, 252.0], [52.8, 252.0], [52.9, 252.0], [53.0, 252.0], [53.1, 252.0], [53.2, 252.0], [53.3, 252.0], [53.4, 252.0], [53.5, 252.0], [53.6, 253.0], [53.7, 253.0], [53.8, 253.0], [53.9, 254.0], [54.0, 254.0], [54.1, 255.0], [54.2, 255.0], [54.3, 255.0], [54.4, 256.0], [54.5, 257.0], [54.6, 257.0], [54.7, 258.0], [54.8, 258.0], [54.9, 258.0], [55.0, 259.0], [55.1, 259.0], [55.2, 259.0], [55.3, 259.0], [55.4, 259.0], [55.5, 259.0], [55.6, 260.0], [55.7, 260.0], [55.8, 260.0], [55.9, 260.0], [56.0, 260.0], [56.1, 260.0], [56.2, 261.0], [56.3, 261.0], [56.4, 261.0], [56.5, 262.0], [56.6, 262.0], [56.7, 262.0], [56.8, 263.0], [56.9, 263.0], [57.0, 263.0], [57.1, 263.0], [57.2, 263.0], [57.3, 264.0], [57.4, 264.0], [57.5, 264.0], [57.6, 264.0], [57.7, 264.0], [57.8, 264.0], [57.9, 264.0], [58.0, 264.0], [58.1, 264.0], [58.2, 265.0], [58.3, 265.0], [58.4, 265.0], [58.5, 265.0], [58.6, 265.0], [58.7, 265.0], [58.8, 266.0], [58.9, 266.0], [59.0, 266.0], [59.1, 266.0], [59.2, 266.0], [59.3, 267.0], [59.4, 267.0], [59.5, 267.0], [59.6, 268.0], [59.7, 268.0], [59.8, 268.0], [59.9, 268.0], [60.0, 269.0], [60.1, 269.0], [60.2, 269.0], [60.3, 269.0], [60.4, 270.0], [60.5, 270.0], [60.6, 270.0], [60.7, 270.0], [60.8, 272.0], [60.9, 272.0], [61.0, 272.0], [61.1, 273.0], [61.2, 273.0], [61.3, 273.0], [61.4, 274.0], [61.5, 274.0], [61.6, 274.0], [61.7, 274.0], [61.8, 274.0], [61.9, 274.0], [62.0, 275.0], [62.1, 275.0], [62.2, 275.0], [62.3, 275.0], [62.4, 275.0], [62.5, 275.0], [62.6, 276.0], [62.7, 276.0], [62.8, 277.0], [62.9, 277.0], [63.0, 277.0], [63.1, 277.0], [63.2, 278.0], [63.3, 278.0], [63.4, 278.0], [63.5, 279.0], [63.6, 280.0], [63.7, 280.0], [63.8, 281.0], [63.9, 281.0], [64.0, 282.0], [64.1, 282.0], [64.2, 282.0], [64.3, 282.0], [64.4, 284.0], [64.5, 285.0], [64.6, 285.0], [64.7, 285.0], [64.8, 285.0], [64.9, 286.0], [65.0, 286.0], [65.1, 286.0], [65.2, 287.0], [65.3, 287.0], [65.4, 288.0], [65.5, 288.0], [65.6, 289.0], [65.7, 289.0], [65.8, 289.0], [65.9, 289.0], [66.0, 290.0], [66.1, 290.0], [66.2, 290.0], [66.3, 291.0], [66.4, 292.0], [66.5, 292.0], [66.6, 293.0], [66.7, 293.0], [66.8, 293.0], [66.9, 294.0], [67.0, 296.0], [67.1, 297.0], [67.2, 297.0], [67.3, 297.0], [67.4, 299.0], [67.5, 301.0], [67.6, 302.0], [67.7, 302.0], [67.8, 302.0], [67.9, 303.0], [68.0, 304.0], [68.1, 304.0], [68.2, 304.0], [68.3, 304.0], [68.4, 305.0], [68.5, 307.0], [68.6, 307.0], [68.7, 307.0], [68.8, 310.0], [68.9, 310.0], [69.0, 310.0], [69.1, 311.0], [69.2, 311.0], [69.3, 312.0], [69.4, 314.0], [69.5, 315.0], [69.6, 316.0], [69.7, 317.0], [69.8, 318.0], [69.9, 318.0], [70.0, 318.0], [70.1, 319.0], [70.2, 319.0], [70.3, 319.0], [70.4, 320.0], [70.5, 321.0], [70.6, 322.0], [70.7, 322.0], [70.8, 322.0], [70.9, 323.0], [71.0, 325.0], [71.1, 329.0], [71.2, 332.0], [71.3, 333.0], [71.4, 335.0], [71.5, 336.0], [71.6, 336.0], [71.7, 340.0], [71.8, 341.0], [71.9, 342.0], [72.0, 344.0], [72.1, 346.0], [72.2, 348.0], [72.3, 350.0], [72.4, 354.0], [72.5, 354.0], [72.6, 355.0], [72.7, 355.0], [72.8, 358.0], [72.9, 368.0], [73.0, 368.0], [73.1, 370.0], [73.2, 374.0], [73.3, 380.0], [73.4, 382.0], [73.5, 388.0], [73.6, 389.0], [73.7, 391.0], [73.8, 400.0], [73.9, 400.0], [74.0, 409.0], [74.1, 415.0], [74.2, 419.0], [74.3, 420.0], [74.4, 427.0], [74.5, 430.0], [74.6, 434.0], [74.7, 436.0], [74.8, 438.0], [74.9, 439.0], [75.0, 442.0], [75.1, 449.0], [75.2, 451.0], [75.3, 460.0], [75.4, 466.0], [75.5, 473.0], [75.6, 482.0], [75.7, 485.0], [75.8, 486.0], [75.9, 486.0], [76.0, 486.0], [76.1, 499.0], [76.2, 500.0], [76.3, 506.0], [76.4, 508.0], [76.5, 514.0], [76.6, 536.0], [76.7, 537.0], [76.8, 542.0], [76.9, 549.0], [77.0, 552.0], [77.1, 555.0], [77.2, 556.0], [77.3, 557.0], [77.4, 568.0], [77.5, 568.0], [77.6, 583.0], [77.7, 585.0], [77.8, 587.0], [77.9, 588.0], [78.0, 589.0], [78.1, 592.0], [78.2, 593.0], [78.3, 594.0], [78.4, 601.0], [78.5, 606.0], [78.6, 608.0], [78.7, 609.0], [78.8, 612.0], [78.9, 615.0], [79.0, 618.0], [79.1, 618.0], [79.2, 618.0], [79.3, 620.0], [79.4, 621.0], [79.5, 623.0], [79.6, 623.0], [79.7, 624.0], [79.8, 625.0], [79.9, 626.0], [80.0, 629.0], [80.1, 631.0], [80.2, 631.0], [80.3, 632.0], [80.4, 635.0], [80.5, 637.0], [80.6, 639.0], [80.7, 640.0], [80.8, 642.0], [80.9, 644.0], [81.0, 645.0], [81.1, 645.0], [81.2, 645.0], [81.3, 648.0], [81.4, 648.0], [81.5, 648.0], [81.6, 649.0], [81.7, 649.0], [81.8, 650.0], [81.9, 652.0], [82.0, 656.0], [82.1, 658.0], [82.2, 658.0], [82.3, 660.0], [82.4, 665.0], [82.5, 669.0], [82.6, 671.0], [82.7, 672.0], [82.8, 672.0], [82.9, 674.0], [83.0, 676.0], [83.1, 677.0], [83.2, 681.0], [83.3, 682.0], [83.4, 689.0], [83.5, 694.0], [83.6, 694.0], [83.7, 695.0], [83.8, 702.0], [83.9, 707.0], [84.0, 711.0], [84.1, 713.0], [84.2, 713.0], [84.3, 718.0], [84.4, 719.0], [84.5, 724.0], [84.6, 725.0], [84.7, 734.0], [84.8, 747.0], [84.9, 758.0], [85.0, 770.0], [85.1, 795.0], [85.2, 796.0], [85.3, 812.0], [85.4, 815.0], [85.5, 818.0], [85.6, 829.0], [85.7, 836.0], [85.8, 836.0], [85.9, 882.0], [86.0, 890.0], [86.1, 892.0], [86.2, 896.0], [86.3, 936.0], [86.4, 964.0], [86.5, 977.0], [86.6, 979.0], [86.7, 979.0], [86.8, 1002.0], [86.9, 1004.0], [87.0, 1004.0], [87.1, 1041.0], [87.2, 1069.0], [87.3, 1073.0], [87.4, 1088.0], [87.5, 1205.0], [87.6, 1210.0], [87.7, 1211.0], [87.8, 1217.0], [87.9, 1219.0], [88.0, 1219.0], [88.1, 1222.0], [88.2, 1223.0], [88.3, 1224.0], [88.4, 1224.0], [88.5, 1225.0], [88.6, 1225.0], [88.7, 1225.0], [88.8, 1227.0], [88.9, 1229.0], [89.0, 1230.0], [89.1, 1230.0], [89.2, 1231.0], [89.3, 1232.0], [89.4, 1233.0], [89.5, 1233.0], [89.6, 1233.0], [89.7, 1233.0], [89.8, 1234.0], [89.9, 1237.0], [90.0, 1237.0], [90.1, 1239.0], [90.2, 1242.0], [90.3, 1243.0], [90.4, 1245.0], [90.5, 1246.0], [90.6, 1246.0], [90.7, 1246.0], [90.8, 1247.0], [90.9, 1248.0], [91.0, 1249.0], [91.1, 1249.0], [91.2, 1249.0], [91.3, 1251.0], [91.4, 1251.0], [91.5, 1251.0], [91.6, 1253.0], [91.7, 1253.0], [91.8, 1253.0], [91.9, 1255.0], [92.0, 1256.0], [92.1, 1256.0], [92.2, 1256.0], [92.3, 1256.0], [92.4, 1256.0], [92.5, 1259.0], [92.6, 1260.0], [92.7, 1260.0], [92.8, 1261.0], [92.9, 1261.0], [93.0, 1264.0], [93.1, 1264.0], [93.2, 1267.0], [93.3, 1274.0], [93.4, 1274.0], [93.5, 1276.0], [93.6, 1277.0], [93.7, 1281.0], [93.8, 1282.0], [93.9, 1286.0], [94.0, 1286.0], [94.1, 1289.0], [94.2, 1293.0], [94.3, 1296.0], [94.4, 1300.0], [94.5, 1302.0], [94.6, 1303.0], [94.7, 1312.0], [94.8, 1318.0], [94.9, 1322.0], [95.0, 1322.0], [95.1, 1329.0], [95.2, 1331.0], [95.3, 1354.0], [95.4, 1355.0], [95.5, 1360.0], [95.6, 1374.0], [95.7, 1400.0], [95.8, 1426.0], [95.9, 1441.0], [96.0, 1455.0], [96.1, 1492.0], [96.2, 1560.0], [96.3, 1614.0], [96.4, 1622.0], [96.5, 1624.0], [96.6, 1660.0], [96.7, 1689.0], [96.8, 1709.0], [96.9, 1716.0], [97.0, 1760.0], [97.1, 1764.0], [97.2, 1846.0], [97.3, 1856.0], [97.4, 1873.0], [97.5, 1888.0], [97.6, 1963.0], [97.7, 1986.0], [97.8, 2052.0], [97.9, 2141.0], [98.0, 2248.0], [98.1, 2261.0], [98.2, 2267.0], [98.3, 2273.0], [98.4, 2276.0], [98.5, 2294.0], [98.6, 2294.0], [98.7, 2295.0], [98.8, 2307.0], [98.9, 2312.0], [99.0, 2314.0], [99.1, 2319.0], [99.2, 2328.0], [99.3, 2338.0], [99.4, 2401.0], [99.5, 2733.0], [99.6, 2810.0], [99.7, 3044.0], [99.8, 3253.0], [99.9, 5305.0]], "isOverall": false, "label": "HTTP Request-0", "isController": false}, {"data": [[0.0, 1233.0], [0.1, 1242.0], [0.2, 1249.0], [0.3, 1249.0], [0.4, 1257.0], [0.5, 1263.0], [0.6, 1265.0], [0.7, 1267.0], [0.8, 1296.0], [0.9, 1307.0], [1.0, 1309.0], [1.1, 1321.0], [1.2, 1321.0], [1.3, 1324.0], [1.4, 1326.0], [1.5, 1333.0], [1.6, 1336.0], [1.7, 1336.0], [1.8, 1346.0], [1.9, 1354.0], [2.0, 1360.0], [2.1, 1364.0], [2.2, 1364.0], [2.3, 1368.0], [2.4, 1374.0], [2.5, 1374.0], [2.6, 1384.0], [2.7, 1392.0], [2.8, 1392.0], [2.9, 1394.0], [3.0, 1399.0], [3.1, 1403.0], [3.2, 1406.0], [3.3, 1414.0], [3.4, 1415.0], [3.5, 1427.0], [3.6, 1430.0], [3.7, 1437.0], [3.8, 1439.0], [3.9, 1441.0], [4.0, 1441.0], [4.1, 1441.0], [4.2, 1441.0], [4.3, 1444.0], [4.4, 1445.0], [4.5, 1451.0], [4.6, 1453.0], [4.7, 1460.0], [4.8, 1460.0], [4.9, 1466.0], [5.0, 1470.0], [5.1, 1477.0], [5.2, 1486.0], [5.3, 1486.0], [5.4, 1490.0], [5.5, 1495.0], [5.6, 1500.0], [5.7, 1500.0], [5.8, 1503.0], [5.9, 1505.0], [6.0, 1511.0], [6.1, 1511.0], [6.2, 1515.0], [6.3, 1516.0], [6.4, 1518.0], [6.5, 1524.0], [6.6, 1527.0], [6.7, 1528.0], [6.8, 1529.0], [6.9, 1530.0], [7.0, 1534.0], [7.1, 1534.0], [7.2, 1535.0], [7.3, 1536.0], [7.4, 1540.0], [7.5, 1545.0], [7.6, 1548.0], [7.7, 1550.0], [7.8, 1552.0], [7.9, 1555.0], [8.0, 1558.0], [8.1, 1558.0], [8.2, 1559.0], [8.3, 1560.0], [8.4, 1564.0], [8.5, 1565.0], [8.6, 1567.0], [8.7, 1567.0], [8.8, 1570.0], [8.9, 1571.0], [9.0, 1573.0], [9.1, 1576.0], [9.2, 1577.0], [9.3, 1577.0], [9.4, 1598.0], [9.5, 1600.0], [9.6, 1601.0], [9.7, 1602.0], [9.8, 1603.0], [9.9, 1605.0], [10.0, 1613.0], [10.1, 1616.0], [10.2, 1618.0], [10.3, 1619.0], [10.4, 1626.0], [10.5, 1627.0], [10.6, 1630.0], [10.7, 1631.0], [10.8, 1633.0], [10.9, 1636.0], [11.0, 1639.0], [11.1, 1640.0], [11.2, 1647.0], [11.3, 1651.0], [11.4, 1652.0], [11.5, 1662.0], [11.6, 1679.0], [11.7, 1680.0], [11.8, 1685.0], [11.9, 1690.0], [12.0, 1692.0], [12.1, 1694.0], [12.2, 1696.0], [12.3, 1698.0], [12.4, 1699.0], [12.5, 1702.0], [12.6, 1702.0], [12.7, 1705.0], [12.8, 1714.0], [12.9, 1716.0], [13.0, 1717.0], [13.1, 1717.0], [13.2, 1724.0], [13.3, 1724.0], [13.4, 1727.0], [13.5, 1730.0], [13.6, 1734.0], [13.7, 1736.0], [13.8, 1744.0], [13.9, 1746.0], [14.0, 1752.0], [14.1, 1752.0], [14.2, 1754.0], [14.3, 1758.0], [14.4, 1758.0], [14.5, 1765.0], [14.6, 1766.0], [14.7, 1772.0], [14.8, 1778.0], [14.9, 1781.0], [15.0, 1782.0], [15.1, 1783.0], [15.2, 1784.0], [15.3, 1784.0], [15.4, 1795.0], [15.5, 1795.0], [15.6, 1802.0], [15.7, 1803.0], [15.8, 1804.0], [15.9, 1808.0], [16.0, 1813.0], [16.1, 1815.0], [16.2, 1823.0], [16.3, 1825.0], [16.4, 1830.0], [16.5, 1831.0], [16.6, 1834.0], [16.7, 1853.0], [16.8, 1858.0], [16.9, 1859.0], [17.0, 1863.0], [17.1, 1863.0], [17.2, 1868.0], [17.3, 1869.0], [17.4, 1874.0], [17.5, 1875.0], [17.6, 1880.0], [17.7, 1883.0], [17.8, 1887.0], [17.9, 1901.0], [18.0, 1903.0], [18.1, 1904.0], [18.2, 1912.0], [18.3, 1912.0], [18.4, 1913.0], [18.5, 1924.0], [18.6, 1926.0], [18.7, 1934.0], [18.8, 1936.0], [18.9, 1936.0], [19.0, 1941.0], [19.1, 1942.0], [19.2, 1946.0], [19.3, 1952.0], [19.4, 1952.0], [19.5, 1953.0], [19.6, 1970.0], [19.7, 1982.0], [19.8, 1982.0], [19.9, 1983.0], [20.0, 1987.0], [20.1, 1990.0], [20.2, 1990.0], [20.3, 1992.0], [20.4, 1993.0], [20.5, 2005.0], [20.6, 2006.0], [20.7, 2020.0], [20.8, 2023.0], [20.9, 2025.0], [21.0, 2025.0], [21.1, 2029.0], [21.2, 2029.0], [21.3, 2033.0], [21.4, 2035.0], [21.5, 2037.0], [21.6, 2039.0], [21.7, 2041.0], [21.8, 2053.0], [21.9, 2054.0], [22.0, 2056.0], [22.1, 2065.0], [22.2, 2075.0], [22.3, 2080.0], [22.4, 2081.0], [22.5, 2081.0], [22.6, 2081.0], [22.7, 2085.0], [22.8, 2090.0], [22.9, 2091.0], [23.0, 2101.0], [23.1, 2103.0], [23.2, 2104.0], [23.3, 2105.0], [23.4, 2105.0], [23.5, 2108.0], [23.6, 2108.0], [23.7, 2125.0], [23.8, 2127.0], [23.9, 2131.0], [24.0, 2132.0], [24.1, 2137.0], [24.2, 2147.0], [24.3, 2174.0], [24.4, 2186.0], [24.5, 2206.0], [24.6, 2207.0], [24.7, 2209.0], [24.8, 2219.0], [24.9, 2220.0], [25.0, 2237.0], [25.1, 2252.0], [25.2, 2259.0], [25.3, 2263.0], [25.4, 2264.0], [25.5, 2275.0], [25.6, 2282.0], [25.7, 2290.0], [25.8, 2291.0], [25.9, 2293.0], [26.0, 2294.0], [26.1, 2300.0], [26.2, 2303.0], [26.3, 2306.0], [26.4, 2308.0], [26.5, 2310.0], [26.6, 2318.0], [26.7, 2322.0], [26.8, 2323.0], [26.9, 2329.0], [27.0, 2330.0], [27.1, 2333.0], [27.2, 2336.0], [27.3, 2342.0], [27.4, 2365.0], [27.5, 2366.0], [27.6, 2380.0], [27.7, 2384.0], [27.8, 2388.0], [27.9, 2396.0], [28.0, 2418.0], [28.1, 2418.0], [28.2, 2422.0], [28.3, 2431.0], [28.4, 2437.0], [28.5, 2444.0], [28.6, 2447.0], [28.7, 2460.0], [28.8, 2465.0], [28.9, 2467.0], [29.0, 2470.0], [29.1, 2471.0], [29.2, 2473.0], [29.3, 2484.0], [29.4, 2486.0], [29.5, 2488.0], [29.6, 2509.0], [29.7, 2514.0], [29.8, 2514.0], [29.9, 2520.0], [30.0, 2527.0], [30.1, 2528.0], [30.2, 2531.0], [30.3, 2541.0], [30.4, 2545.0], [30.5, 2549.0], [30.6, 2557.0], [30.7, 2558.0], [30.8, 2562.0], [30.9, 2570.0], [31.0, 2570.0], [31.1, 2580.0], [31.2, 2582.0], [31.3, 2584.0], [31.4, 2585.0], [31.5, 2593.0], [31.6, 2607.0], [31.7, 2609.0], [31.8, 2614.0], [31.9, 2619.0], [32.0, 2631.0], [32.1, 2632.0], [32.2, 2635.0], [32.3, 2642.0], [32.4, 2643.0], [32.5, 2653.0], [32.6, 2655.0], [32.7, 2657.0], [32.8, 2660.0], [32.9, 2666.0], [33.0, 2671.0], [33.1, 2684.0], [33.2, 2686.0], [33.3, 2687.0], [33.4, 2699.0], [33.5, 2699.0], [33.6, 2701.0], [33.7, 2701.0], [33.8, 2707.0], [33.9, 2722.0], [34.0, 2723.0], [34.1, 2730.0], [34.2, 2731.0], [34.3, 2734.0], [34.4, 2742.0], [34.5, 2747.0], [34.6, 2747.0], [34.7, 2749.0], [34.8, 2760.0], [34.9, 2765.0], [35.0, 2767.0], [35.1, 2777.0], [35.2, 2778.0], [35.3, 2788.0], [35.4, 2798.0], [35.5, 2801.0], [35.6, 2802.0], [35.7, 2803.0], [35.8, 2816.0], [35.9, 2816.0], [36.0, 2831.0], [36.1, 2834.0], [36.2, 2839.0], [36.3, 2850.0], [36.4, 2887.0], [36.5, 2887.0], [36.6, 2889.0], [36.7, 2890.0], [36.8, 2897.0], [36.9, 2905.0], [37.0, 2906.0], [37.1, 2916.0], [37.2, 2917.0], [37.3, 2918.0], [37.4, 2929.0], [37.5, 2958.0], [37.6, 2968.0], [37.7, 2978.0], [37.8, 2979.0], [37.9, 2990.0], [38.0, 2995.0], [38.1, 2995.0], [38.2, 2995.0], [38.3, 3000.0], [38.4, 3002.0], [38.5, 3033.0], [38.6, 3034.0], [38.7, 3043.0], [38.8, 3046.0], [38.9, 3052.0], [39.0, 3060.0], [39.1, 3063.0], [39.2, 3063.0], [39.3, 3073.0], [39.4, 3093.0], [39.5, 3104.0], [39.6, 3110.0], [39.7, 3123.0], [39.8, 3129.0], [39.9, 3150.0], [40.0, 3157.0], [40.1, 3165.0], [40.2, 3189.0], [40.3, 3194.0], [40.4, 3196.0], [40.5, 3198.0], [40.6, 3217.0], [40.7, 3224.0], [40.8, 3239.0], [40.9, 3255.0], [41.0, 3265.0], [41.1, 3278.0], [41.2, 3296.0], [41.3, 3296.0], [41.4, 3312.0], [41.5, 3324.0], [41.6, 3324.0], [41.7, 3334.0], [41.8, 3336.0], [41.9, 3347.0], [42.0, 3348.0], [42.1, 3356.0], [42.2, 3359.0], [42.3, 3373.0], [42.4, 3381.0], [42.5, 3387.0], [42.6, 3395.0], [42.7, 3398.0], [42.8, 3409.0], [42.9, 3429.0], [43.0, 3433.0], [43.1, 3441.0], [43.2, 3461.0], [43.3, 3471.0], [43.4, 3475.0], [43.5, 3505.0], [43.6, 3505.0], [43.7, 3552.0], [43.8, 3557.0], [43.9, 3557.0], [44.0, 3579.0], [44.1, 3588.0], [44.2, 3599.0], [44.3, 3606.0], [44.4, 3610.0], [44.5, 3612.0], [44.6, 3640.0], [44.7, 3658.0], [44.8, 3662.0], [44.9, 3664.0], [45.0, 3694.0], [45.1, 3701.0], [45.2, 3709.0], [45.3, 3710.0], [45.4, 3727.0], [45.5, 3734.0], [45.6, 3741.0], [45.7, 3743.0], [45.8, 3744.0], [45.9, 3762.0], [46.0, 3763.0], [46.1, 3765.0], [46.2, 3783.0], [46.3, 3786.0], [46.4, 3798.0], [46.5, 3803.0], [46.6, 3811.0], [46.7, 3812.0], [46.8, 3816.0], [46.9, 3817.0], [47.0, 3819.0], [47.1, 3835.0], [47.2, 3857.0], [47.3, 3860.0], [47.4, 3876.0], [47.5, 3877.0], [47.6, 3897.0], [47.7, 3902.0], [47.8, 3916.0], [47.9, 3946.0], [48.0, 3954.0], [48.1, 3956.0], [48.2, 3966.0], [48.3, 3983.0], [48.4, 4009.0], [48.5, 4028.0], [48.6, 4036.0], [48.7, 4042.0], [48.8, 4044.0], [48.9, 4056.0], [49.0, 4093.0], [49.1, 4095.0], [49.2, 4103.0], [49.3, 4108.0], [49.4, 4129.0], [49.5, 4156.0], [49.6, 4162.0], [49.7, 4171.0], [49.8, 4176.0], [49.9, 4180.0], [50.0, 4183.0], [50.1, 4192.0], [50.2, 4224.0], [50.3, 4258.0], [50.4, 4263.0], [50.5, 4276.0], [50.6, 4290.0], [50.7, 4319.0], [50.8, 4326.0], [50.9, 4327.0], [51.0, 4338.0], [51.1, 4339.0], [51.2, 4346.0], [51.3, 4350.0], [51.4, 4371.0], [51.5, 4392.0], [51.6, 4401.0], [51.7, 4406.0], [51.8, 4421.0], [51.9, 4430.0], [52.0, 4446.0], [52.1, 4484.0], [52.2, 4499.0], [52.3, 4531.0], [52.4, 4532.0], [52.5, 4538.0], [52.6, 4550.0], [52.7, 4556.0], [52.8, 4560.0], [52.9, 4574.0], [53.0, 4603.0], [53.1, 4606.0], [53.2, 4607.0], [53.3, 4614.0], [53.4, 4638.0], [53.5, 4644.0], [53.6, 4660.0], [53.7, 4681.0], [53.8, 4693.0], [53.9, 4703.0], [54.0, 4705.0], [54.1, 4719.0], [54.2, 4725.0], [54.3, 4729.0], [54.4, 4761.0], [54.5, 4771.0], [54.6, 4775.0], [54.7, 4781.0], [54.8, 4784.0], [54.9, 4784.0], [55.0, 4793.0], [55.1, 4802.0], [55.2, 4816.0], [55.3, 4828.0], [55.4, 4846.0], [55.5, 4854.0], [55.6, 4858.0], [55.7, 4860.0], [55.8, 4863.0], [55.9, 4865.0], [56.0, 4870.0], [56.1, 4873.0], [56.2, 4880.0], [56.3, 4884.0], [56.4, 4892.0], [56.5, 4924.0], [56.6, 4926.0], [56.7, 4938.0], [56.8, 4973.0], [56.9, 4981.0], [57.0, 4986.0], [57.1, 4991.0], [57.2, 4995.0], [57.3, 5001.0], [57.4, 5007.0], [57.5, 5018.0], [57.6, 5039.0], [57.7, 5047.0], [57.8, 5048.0], [57.9, 5078.0], [58.0, 5085.0], [58.1, 5108.0], [58.2, 5108.0], [58.3, 5120.0], [58.4, 5137.0], [58.5, 5157.0], [58.6, 5163.0], [58.7, 5192.0], [58.8, 5213.0], [58.9, 5238.0], [59.0, 5244.0], [59.1, 5247.0], [59.2, 5248.0], [59.3, 5257.0], [59.4, 5335.0], [59.5, 5342.0], [59.6, 5352.0], [59.7, 5358.0], [59.8, 5377.0], [59.9, 5381.0], [60.0, 5388.0], [60.1, 5402.0], [60.2, 5406.0], [60.3, 5408.0], [60.4, 5412.0], [60.5, 5413.0], [60.6, 5418.0], [60.7, 5429.0], [60.8, 5454.0], [60.9, 5455.0], [61.0, 5493.0], [61.1, 5510.0], [61.2, 5535.0], [61.3, 5552.0], [61.4, 5553.0], [61.5, 5561.0], [61.6, 5567.0], [61.7, 5604.0], [61.8, 5656.0], [61.9, 5669.0], [62.0, 5675.0], [62.1, 5680.0], [62.2, 5723.0], [62.3, 5728.0], [62.4, 5733.0], [62.5, 5749.0], [62.6, 5767.0], [62.7, 5778.0], [62.8, 5800.0], [62.9, 5804.0], [63.0, 5820.0], [63.1, 5823.0], [63.2, 5853.0], [63.3, 5859.0], [63.4, 5865.0], [63.5, 5873.0], [63.6, 5908.0], [63.7, 5919.0], [63.8, 5937.0], [63.9, 5951.0], [64.0, 5971.0], [64.1, 5983.0], [64.2, 5988.0], [64.3, 6005.0], [64.4, 6012.0], [64.5, 6019.0], [64.6, 6019.0], [64.7, 6022.0], [64.8, 6030.0], [64.9, 6030.0], [65.0, 6072.0], [65.1, 6083.0], [65.2, 6091.0], [65.3, 6095.0], [65.4, 6096.0], [65.5, 6106.0], [65.6, 6119.0], [65.7, 6129.0], [65.8, 6130.0], [65.9, 6132.0], [66.0, 6135.0], [66.1, 6138.0], [66.2, 6155.0], [66.3, 6166.0], [66.4, 6170.0], [66.5, 6175.0], [66.6, 6194.0], [66.7, 6216.0], [66.8, 6217.0], [66.9, 6240.0], [67.0, 6245.0], [67.1, 6254.0], [67.2, 6255.0], [67.3, 6265.0], [67.4, 6269.0], [67.5, 6285.0], [67.6, 6286.0], [67.7, 6296.0], [67.8, 6299.0], [67.9, 6308.0], [68.0, 6322.0], [68.1, 6340.0], [68.2, 6352.0], [68.3, 6363.0], [68.4, 6408.0], [68.5, 6413.0], [68.6, 6420.0], [68.7, 6463.0], [68.8, 6468.0], [68.9, 6470.0], [69.0, 6472.0], [69.1, 6473.0], [69.2, 6489.0], [69.3, 6511.0], [69.4, 6544.0], [69.5, 6551.0], [69.6, 6557.0], [69.7, 6560.0], [69.8, 6566.0], [69.9, 6568.0], [70.0, 6604.0], [70.1, 6605.0], [70.2, 6606.0], [70.3, 6609.0], [70.4, 6609.0], [70.5, 6618.0], [70.6, 6638.0], [70.7, 6641.0], [70.8, 6643.0], [70.9, 6675.0], [71.0, 6687.0], [71.1, 6709.0], [71.2, 6729.0], [71.3, 6753.0], [71.4, 6756.0], [71.5, 6757.0], [71.6, 6760.0], [71.7, 6773.0], [71.8, 6778.0], [71.9, 6786.0], [72.0, 6793.0], [72.1, 6795.0], [72.2, 6812.0], [72.3, 6845.0], [72.4, 6853.0], [72.5, 6871.0], [72.6, 6892.0], [72.7, 6916.0], [72.8, 6917.0], [72.9, 6923.0], [73.0, 6927.0], [73.1, 6937.0], [73.2, 6940.0], [73.3, 6946.0], [73.4, 6969.0], [73.5, 6980.0], [73.6, 7004.0], [73.7, 7007.0], [73.8, 7010.0], [73.9, 7014.0], [74.0, 7014.0], [74.1, 7017.0], [74.2, 7034.0], [74.3, 7058.0], [74.4, 7060.0], [74.5, 7078.0], [74.6, 7090.0], [74.7, 7117.0], [74.8, 7118.0], [74.9, 7152.0], [75.0, 7156.0], [75.1, 7174.0], [75.2, 7206.0], [75.3, 7220.0], [75.4, 7239.0], [75.5, 7246.0], [75.6, 7248.0], [75.7, 7289.0], [75.8, 7293.0], [75.9, 7294.0], [76.0, 7326.0], [76.1, 7338.0], [76.2, 7377.0], [76.3, 7383.0], [76.4, 7384.0], [76.5, 7413.0], [76.6, 7420.0], [76.7, 7420.0], [76.8, 7431.0], [76.9, 7435.0], [77.0, 7464.0], [77.1, 7464.0], [77.2, 7499.0], [77.3, 7507.0], [77.4, 7523.0], [77.5, 7536.0], [77.6, 7538.0], [77.7, 7581.0], [77.8, 7584.0], [77.9, 7613.0], [78.0, 7636.0], [78.1, 7638.0], [78.2, 7644.0], [78.3, 7645.0], [78.4, 7664.0], [78.5, 7706.0], [78.6, 7710.0], [78.7, 7711.0], [78.8, 7717.0], [78.9, 7722.0], [79.0, 7727.0], [79.1, 7729.0], [79.2, 7745.0], [79.3, 7747.0], [79.4, 7751.0], [79.5, 7760.0], [79.6, 7772.0], [79.7, 7826.0], [79.8, 7830.0], [79.9, 7831.0], [80.0, 7853.0], [80.1, 7904.0], [80.2, 7925.0], [80.3, 7927.0], [80.4, 7928.0], [80.5, 7935.0], [80.6, 7946.0], [80.7, 7946.0], [80.8, 7953.0], [80.9, 7967.0], [81.0, 7967.0], [81.1, 7977.0], [81.2, 8010.0], [81.3, 8012.0], [81.4, 8017.0], [81.5, 8046.0], [81.6, 8052.0], [81.7, 8056.0], [81.8, 8088.0], [81.9, 8091.0], [82.0, 8095.0], [82.1, 8115.0], [82.2, 8118.0], [82.3, 8140.0], [82.4, 8144.0], [82.5, 8161.0], [82.6, 8180.0], [82.7, 8181.0], [82.8, 8186.0], [82.9, 8196.0], [83.0, 8204.0], [83.1, 8206.0], [83.2, 8208.0], [83.3, 8213.0], [83.4, 8214.0], [83.5, 8225.0], [83.6, 8234.0], [83.7, 8253.0], [83.8, 8275.0], [83.9, 8320.0], [84.0, 8346.0], [84.1, 8375.0], [84.2, 8375.0], [84.3, 8435.0], [84.4, 8454.0], [84.5, 8467.0], [84.6, 8479.0], [84.7, 8483.0], [84.8, 8496.0], [84.9, 8499.0], [85.0, 8501.0], [85.1, 8501.0], [85.2, 8508.0], [85.3, 8509.0], [85.4, 8532.0], [85.5, 8535.0], [85.6, 8546.0], [85.7, 8559.0], [85.8, 8562.0], [85.9, 8564.0], [86.0, 8590.0], [86.1, 8601.0], [86.2, 8603.0], [86.3, 8640.0], [86.4, 8653.0], [86.5, 8654.0], [86.6, 8661.0], [86.7, 8682.0], [86.8, 8691.0], [86.9, 8747.0], [87.0, 8748.0], [87.1, 8818.0], [87.2, 8836.0], [87.3, 8844.0], [87.4, 8875.0], [87.5, 8894.0], [87.6, 8987.0], [87.7, 8994.0], [87.8, 9026.0], [87.9, 9034.0], [88.0, 9103.0], [88.1, 9111.0], [88.2, 9267.0], [88.3, 9270.0], [88.4, 9281.0], [88.5, 9330.0], [88.6, 9331.0], [88.7, 9385.0], [88.8, 9460.0], [88.9, 9501.0], [89.0, 9593.0], [89.1, 9686.0], [89.2, 9728.0], [89.3, 9731.0], [89.4, 9762.0], [89.5, 9799.0], [89.6, 9803.0], [89.7, 9846.0], [89.8, 9863.0], [89.9, 9865.0], [90.0, 9889.0], [90.1, 9906.0], [90.2, 9920.0], [90.3, 9928.0], [90.4, 9957.0], [90.5, 9970.0], [90.6, 9998.0], [90.7, 10006.0], [90.8, 10034.0], [90.9, 10051.0], [91.0, 10109.0], [91.1, 10112.0], [91.2, 10145.0], [91.3, 10155.0], [91.4, 10165.0], [91.5, 10206.0], [91.6, 10226.0], [91.7, 10249.0], [91.8, 10275.0], [91.9, 10276.0], [92.0, 10278.0], [92.1, 10323.0], [92.2, 10331.0], [92.3, 10361.0], [92.4, 10374.0], [92.5, 10380.0], [92.6, 10394.0], [92.7, 10459.0], [92.8, 10520.0], [92.9, 10521.0], [93.0, 10533.0], [93.1, 10536.0], [93.2, 10577.0], [93.3, 10625.0], [93.4, 10694.0], [93.5, 10744.0], [93.6, 10755.0], [93.7, 10771.0], [93.8, 10782.0], [93.9, 10828.0], [94.0, 10833.0], [94.1, 10833.0], [94.2, 10908.0], [94.3, 10914.0], [94.4, 10923.0], [94.5, 10960.0], [94.6, 10978.0], [94.7, 11051.0], [94.8, 11056.0], [94.9, 11109.0], [95.0, 11109.0], [95.1, 11114.0], [95.2, 11119.0], [95.3, 11121.0], [95.4, 11147.0], [95.5, 11163.0], [95.6, 11260.0], [95.7, 11301.0], [95.8, 11315.0], [95.9, 11341.0], [96.0, 11357.0], [96.1, 11376.0], [96.2, 11402.0], [96.3, 11424.0], [96.4, 11539.0], [96.5, 11627.0], [96.6, 11638.0], [96.7, 11656.0], [96.8, 11735.0], [96.9, 11750.0], [97.0, 11828.0], [97.1, 11848.0], [97.2, 11863.0], [97.3, 11967.0], [97.4, 11970.0], [97.5, 12026.0], [97.6, 12061.0], [97.7, 12176.0], [97.8, 12359.0], [97.9, 12405.0], [98.0, 12430.0], [98.1, 12450.0], [98.2, 12519.0], [98.3, 12557.0], [98.4, 12862.0], [98.5, 12888.0], [98.6, 13079.0], [98.7, 13225.0], [98.8, 13259.0], [98.9, 13371.0], [99.0, 13390.0], [99.1, 13601.0], [99.2, 13759.0], [99.3, 13834.0], [99.4, 13897.0], [99.5, 14027.0], [99.6, 14033.0], [99.7, 15538.0], [99.8, 15879.0], [99.9, 16462.0]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 100.0, "maxY": 543.0, "series": [{"data": [[700.0, 2.0], [800.0, 2.0], [900.0, 2.0], [1000.0, 21.0], [1100.0, 39.0], [1200.0, 44.0], [1300.0, 42.0], [1400.0, 36.0], [1500.0, 31.0], [1600.0, 26.0], [1700.0, 24.0], [1800.0, 31.0], [1900.0, 17.0], [2000.0, 14.0], [2100.0, 19.0], [2200.0, 10.0], [2300.0, 17.0], [2400.0, 14.0], [2500.0, 19.0], [2600.0, 8.0], [2800.0, 10.0], [2700.0, 9.0], [2900.0, 6.0], [3000.0, 9.0], [3100.0, 7.0], [3200.0, 4.0], [3300.0, 10.0], [3400.0, 4.0], [3500.0, 11.0], [3600.0, 9.0], [3700.0, 5.0], [3800.0, 11.0], [3900.0, 10.0], [4000.0, 4.0], [4200.0, 10.0], [4100.0, 8.0], [4300.0, 6.0], [4400.0, 6.0], [4600.0, 8.0], [4500.0, 12.0], [4800.0, 12.0], [4700.0, 9.0], [5000.0, 7.0], [5100.0, 6.0], [4900.0, 7.0], [5200.0, 6.0], [5300.0, 5.0], [5500.0, 10.0], [5400.0, 6.0], [5600.0, 8.0], [5700.0, 8.0], [5800.0, 12.0], [5900.0, 11.0], [6000.0, 8.0], [6100.0, 13.0], [6300.0, 14.0], [6200.0, 6.0], [6600.0, 9.0], [6400.0, 11.0], [6500.0, 10.0], [6800.0, 9.0], [6900.0, 9.0], [6700.0, 6.0], [7100.0, 8.0], [7000.0, 3.0], [7200.0, 7.0], [7300.0, 10.0], [7400.0, 9.0], [7600.0, 6.0], [7500.0, 6.0], [7900.0, 6.0], [7800.0, 7.0], [7700.0, 10.0], [8000.0, 4.0], [8100.0, 4.0], [8400.0, 6.0], [8300.0, 4.0], [8700.0, 3.0], [8600.0, 2.0], [8200.0, 9.0], [8500.0, 2.0], [8900.0, 4.0], [9000.0, 4.0], [8800.0, 3.0], [9100.0, 2.0], [9200.0, 1.0], [9400.0, 3.0], [9600.0, 4.0], [9700.0, 4.0], [9500.0, 5.0], [9300.0, 2.0], [9900.0, 6.0], [10100.0, 3.0], [10200.0, 4.0], [10000.0, 5.0], [9800.0, 1.0], [10300.0, 4.0], [10500.0, 4.0], [10700.0, 6.0], [10400.0, 1.0], [10600.0, 4.0], [11100.0, 4.0], [11000.0, 3.0], [10900.0, 1.0], [11200.0, 2.0], [10800.0, 2.0], [11500.0, 1.0], [11600.0, 3.0], [11300.0, 4.0], [11700.0, 1.0], [11800.0, 2.0], [12200.0, 2.0], [12000.0, 2.0], [11900.0, 1.0], [12100.0, 1.0], [12600.0, 1.0], [12400.0, 1.0], [12300.0, 1.0], [12500.0, 2.0], [13000.0, 2.0], [13300.0, 1.0], [12900.0, 1.0], [13400.0, 1.0], [13600.0, 2.0], [13900.0, 1.0], [15200.0, 1.0], [15600.0, 1.0], [16200.0, 1.0]], "isOverall": false, "label": "HTTP Request-1", "isController": false}, {"data": [[600.0, 54.0], [700.0, 15.0], [800.0, 10.0], [900.0, 5.0], [1000.0, 7.0], [1200.0, 69.0], [1300.0, 13.0], [1400.0, 5.0], [1500.0, 1.0], [100.0, 132.0], [1600.0, 5.0], [1700.0, 4.0], [1800.0, 4.0], [1900.0, 2.0], [2000.0, 1.0], [2100.0, 1.0], [2300.0, 6.0], [2200.0, 8.0], [2400.0, 1.0], [2800.0, 1.0], [2700.0, 1.0], [3000.0, 1.0], [200.0, 543.0], [3200.0, 1.0], [300.0, 63.0], [5300.0, 1.0], [400.0, 24.0], [500.0, 22.0]], "isOverall": false, "label": "HTTP Request-0", "isController": false}, {"data": [[1200.0, 9.0], [1300.0, 21.0], [1400.0, 26.0], [1500.0, 39.0], [1600.0, 30.0], [1700.0, 31.0], [1800.0, 23.0], [1900.0, 25.0], [2000.0, 25.0], [2100.0, 15.0], [2300.0, 19.0], [2200.0, 16.0], [2400.0, 16.0], [2500.0, 20.0], [2600.0, 20.0], [2800.0, 14.0], [2700.0, 19.0], [2900.0, 14.0], [3000.0, 12.0], [3100.0, 11.0], [3200.0, 8.0], [3300.0, 14.0], [3400.0, 7.0], [3500.0, 8.0], [3700.0, 14.0], [3600.0, 8.0], [3800.0, 12.0], [3900.0, 7.0], [4000.0, 8.0], [4300.0, 9.0], [4200.0, 5.0], [4100.0, 10.0], [4500.0, 7.0], [4600.0, 9.0], [4400.0, 7.0], [4700.0, 12.0], [4800.0, 14.0], [4900.0, 8.0], [5100.0, 7.0], [5000.0, 8.0], [5300.0, 7.0], [5200.0, 6.0], [5500.0, 6.0], [5400.0, 10.0], [5600.0, 5.0], [5700.0, 6.0], [5800.0, 8.0], [5900.0, 7.0], [6000.0, 12.0], [6100.0, 12.0], [6200.0, 12.0], [6300.0, 5.0], [6600.0, 11.0], [6400.0, 9.0], [6500.0, 7.0], [6900.0, 9.0], [6700.0, 11.0], [6800.0, 5.0], [7000.0, 11.0], [7100.0, 6.0], [7300.0, 5.0], [7400.0, 8.0], [7200.0, 8.0], [7500.0, 6.0], [7600.0, 6.0], [7900.0, 11.0], [7700.0, 12.0], [7800.0, 4.0], [8100.0, 9.0], [8000.0, 9.0], [8200.0, 9.0], [8600.0, 8.0], [8500.0, 11.0], [8300.0, 4.0], [8700.0, 2.0], [8400.0, 7.0], [9100.0, 2.0], [8800.0, 5.0], [9200.0, 3.0], [8900.0, 2.0], [9000.0, 2.0], [9700.0, 4.0], [9500.0, 2.0], [9600.0, 1.0], [9400.0, 1.0], [9300.0, 3.0], [9900.0, 6.0], [10100.0, 5.0], [10000.0, 3.0], [10200.0, 6.0], [9800.0, 5.0], [10300.0, 6.0], [10500.0, 5.0], [10700.0, 4.0], [10400.0, 1.0], [10600.0, 2.0], [10800.0, 3.0], [10900.0, 5.0], [11100.0, 7.0], [11000.0, 2.0], [11200.0, 1.0], [11300.0, 5.0], [11700.0, 2.0], [11400.0, 2.0], [11500.0, 1.0], [11600.0, 3.0], [11800.0, 3.0], [12000.0, 2.0], [11900.0, 2.0], [12100.0, 1.0], [12300.0, 1.0], [12500.0, 2.0], [12400.0, 3.0], [12800.0, 2.0], [13200.0, 2.0], [13000.0, 1.0], [13300.0, 2.0], [13600.0, 1.0], [13700.0, 1.0], [13800.0, 2.0], [14000.0, 2.0], [15500.0, 1.0], [15800.0, 1.0], [16400.0, 1.0]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 16400.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 446.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 1791.0, "series": [{"data": [[0.0, 763.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 446.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 1791.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 2.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 234.2249999999998, "minX": 1.7023017E12, "maxY": 234.2249999999998, "series": [{"data": [[1.7023017E12, 234.2249999999998]], "isOverall": false, "label": "Users10", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.7023017E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 18000000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 156.0, "minX": 1.0, "maxY": 13259.0, "series": [{"data": [[2.0, 2725.0], [3.0, 4262.0], [4.0, 2500.0], [5.0, 2175.0], [6.0, 2196.0], [7.0, 4755.0], [8.0, 4091.0], [9.0, 3735.0], [10.0, 3996.0], [12.0, 3863.5], [13.0, 5023.0], [14.0, 2421.0], [15.0, 3930.0], [16.0, 3099.0], [17.0, 4178.0], [18.0, 7181.0], [19.0, 2274.0], [20.0, 2850.0], [22.0, 4613.0], [23.0, 2578.0], [24.0, 3377.0], [25.0, 2690.0], [27.0, 4843.0], [28.0, 1898.0], [29.0, 4367.0], [30.0, 4730.0], [33.0, 2518.0], [32.0, 4466.0], [35.0, 2077.0], [34.0, 4329.0], [37.0, 4176.5], [39.0, 3037.0], [38.0, 5892.0], [41.0, 2436.0], [40.0, 3587.0], [43.0, 6309.0], [42.0, 4103.0], [45.0, 5108.0], [44.0, 2701.0], [47.0, 5720.0], [46.0, 5315.0], [49.0, 4591.0], [48.0, 5385.0], [51.0, 6862.0], [50.0, 3041.0], [52.0, 4968.0], [55.0, 3644.0], [54.0, 6056.0], [57.0, 7225.0], [56.0, 4548.0], [59.0, 4640.0], [58.0, 6358.0], [61.0, 6703.0], [60.0, 2502.0], [63.0, 7702.0], [62.0, 4526.0], [67.0, 3370.0], [65.0, 3857.0], [64.0, 2366.0], [71.0, 5322.0], [70.0, 1847.0], [69.0, 6804.0], [68.0, 2818.0], [75.0, 4187.0], [74.0, 7490.0], [73.0, 1994.0], [72.0, 3517.0], [79.0, 5203.0], [78.0, 5687.0], [77.0, 6025.0], [76.0, 4288.0], [83.0, 2515.0], [82.0, 3051.0], [81.0, 3797.0], [80.0, 5025.0], [87.0, 869.0], [86.0, 4762.0], [85.0, 7976.0], [84.0, 3450.0], [91.0, 4956.0], [90.0, 7809.0], [89.0, 4641.0], [88.0, 717.0], [95.0, 9011.0], [94.0, 4484.0], [93.0, 7027.0], [92.0, 4616.0], [99.0, 3862.0], [98.0, 1721.0], [97.0, 6991.0], [96.0, 5806.0], [103.0, 7175.0], [102.0, 5623.0], [101.0, 4793.0], [100.0, 4503.0], [107.0, 7347.0], [106.0, 5910.0], [105.0, 5579.0], [104.0, 6509.0], [111.0, 3401.0], [110.0, 746.0], [109.0, 6511.0], [108.0, 5690.0], [115.0, 6378.0], [114.0, 8590.0], [113.0, 7713.0], [112.0, 6043.0], [119.0, 7711.0], [118.0, 5886.0], [117.0, 4190.0], [116.0, 6999.0], [123.0, 8768.0], [122.0, 4846.0], [121.0, 1287.0], [120.0, 1326.0], [127.0, 1607.0], [126.0, 1230.0], [125.0, 8241.0], [124.0, 887.0], [135.0, 1180.0], [134.0, 1493.0], [133.0, 5508.0], [132.0, 1874.0], [131.0, 7955.0], [130.0, 8598.0], [129.0, 3165.5], [143.0, 1666.0], [142.0, 6514.0], [141.0, 1572.0], [140.0, 2471.0], [138.0, 2112.0], [137.0, 3211.0], [136.0, 3992.0], [151.0, 6266.0], [150.0, 930.0], [149.0, 6766.5], [147.0, 1250.0], [146.0, 3310.0], [145.0, 6806.0], [144.0, 12159.0], [159.0, 5578.0], [158.0, 2546.0], [157.0, 6036.0], [156.0, 4197.0], [155.0, 3753.0], [154.0, 2782.0], [152.0, 8805.0], [167.0, 1257.0], [166.0, 1560.0], [165.0, 1875.0], [164.0, 1399.0], [163.0, 1137.0], [162.0, 2456.0], [161.0, 1309.0], [160.0, 2331.0], [175.0, 6587.0], [174.0, 9205.0], [173.0, 1315.0], [172.0, 5840.0], [171.0, 1509.0], [170.0, 2198.0], [169.0, 3588.0], [168.0, 1087.0], [183.0, 1375.0], [181.0, 3981.0], [180.0, 8953.0], [179.0, 6115.0], [178.0, 7735.0], [177.0, 5151.0], [176.0, 1233.0], [191.0, 1326.0], [190.0, 12990.0], [189.0, 8303.0], [188.0, 2068.0], [187.0, 1197.0], [186.0, 1309.0], [185.0, 1380.0], [184.0, 1380.0], [199.0, 2121.0], [198.0, 1090.0], [197.0, 1222.0], [196.0, 2809.0], [195.0, 6639.0], [194.0, 1262.0], [193.0, 4270.0], [207.0, 1545.0], [206.0, 4199.0], [204.0, 1241.0], [203.0, 1545.0], [201.0, 10055.0], [200.0, 1369.0], [215.0, 3542.0], [214.0, 10041.0], [213.0, 4249.0], [212.0, 5898.0], [211.0, 6781.0], [210.0, 5928.0], [209.0, 1262.0], [208.0, 1133.0], [222.0, 2998.666666666667], [221.0, 4317.615384615385], [220.0, 4495.285714285715], [219.0, 6872.0], [218.0, 3591.0], [217.0, 4259.0], [216.0, 7572.0], [231.0, 1702.0], [230.0, 4343.454545454545], [229.0, 5233.0], [228.0, 2518.6], [227.0, 3395.5], [226.0, 4221.25], [225.0, 2967.5], [224.0, 1332.25], [239.0, 5122.000000000001], [238.0, 4568.187500000001], [237.0, 3305.8888888888887], [236.0, 6003.4], [235.0, 4917.166666666667], [234.0, 3843.8], [233.0, 9589.666666666668], [232.0, 1658.25], [247.0, 6171.0], [246.0, 9984.0], [245.0, 1504.0], [244.0, 7446.0], [243.0, 1457.0], [242.0, 4042.0], [241.0, 8453.2], [240.0, 5777.739130434783], [254.0, 2216.0], [253.0, 5157.0], [252.0, 4572.0], [251.0, 10715.0], [250.0, 3887.0], [248.0, 4274.5], [270.0, 3843.153846153846], [271.0, 3272.0], [268.0, 3746.625], [258.0, 6234.0], [257.0, 5040.0], [256.0, 4646.5], [259.0, 1247.5], [269.0, 4882.666666666667], [267.0, 3143.5], [265.0, 5133.75], [266.0, 3347.0], [264.0, 5459.299999999999], [263.0, 5138.785714285715], [262.0, 5780.263157894737], [261.0, 4900.375], [260.0, 6974.0], [287.0, 4835.040000000001], [278.0, 4416.793103448274], [277.0, 4389.909090909091], [276.0, 3139.7272727272725], [283.0, 4908.045454545454], [284.0, 4828.321428571428], [285.0, 4249.9047619047615], [286.0, 4489.217391304348], [282.0, 4335.896551724138], [281.0, 5933.249999999999], [280.0, 5232.687500000001], [279.0, 5122.909090909092], [272.0, 3498.625], [273.0, 2552.1428571428573], [275.0, 3432.133333333333], [274.0, 3801.1111111111113], [290.0, 4576.757575757576], [291.0, 4781.833333333334], [301.0, 3021.0], [300.0, 4349.666666666667], [297.0, 4005.6], [299.0, 8406.0], [298.0, 1566.0], [296.0, 4955.8], [295.0, 4236.388888888888], [294.0, 5341.833333333334], [293.0, 4131.75], [292.0, 5812.333333333333], [289.0, 5006.44], [288.0, 4830.2307692307695], [1.0, 3990.0]], "isOverall": false, "label": "HTTP Request-1", "isController": false}, {"data": [[234.226, 4541.036000000005]], "isOverall": false, "label": "HTTP Request-1-Aggregated", "isController": false}, {"data": [[2.0, 1229.0], [3.0, 237.0], [4.0, 650.0], [5.0, 1253.0], [6.0, 1237.0], [7.0, 239.0], [8.0, 246.0], [9.0, 231.0], [10.0, 266.0], [12.0, 242.0], [13.0, 233.0], [14.0, 221.0], [15.0, 245.0], [16.0, 644.0], [17.0, 242.0], [18.0, 248.0], [19.0, 409.0], [20.0, 936.0], [22.0, 821.5], [23.0, 222.0], [24.0, 232.0], [25.0, 227.0], [27.0, 1235.0], [28.0, 589.0], [29.0, 239.0], [30.0, 2733.0], [33.0, 228.0], [32.0, 252.5], [35.0, 1234.0], [34.0, 230.0], [37.0, 447.5], [39.0, 725.0], [38.0, 711.0], [41.0, 1227.0], [40.0, 229.0], [43.0, 259.0], [42.0, 252.0], [45.0, 226.0], [44.0, 204.0], [47.0, 230.0], [46.0, 177.0], [49.0, 1716.0], [48.0, 175.0], [51.0, 672.0], [50.0, 236.0], [52.0, 244.0], [55.0, 233.0], [54.0, 764.5], [57.0, 238.0], [56.0, 244.0], [59.0, 239.0], [58.0, 1253.0], [61.0, 236.0], [60.0, 221.0], [63.0, 225.0], [62.0, 249.0], [67.0, 226.5], [65.0, 2261.0], [64.0, 215.0], [71.0, 245.0], [70.0, 233.0], [69.0, 274.0], [68.0, 233.0], [75.0, 658.0], [74.0, 1073.0], [73.0, 224.0], [72.0, 210.0], [79.0, 214.0], [78.0, 232.0], [77.0, 214.0], [76.0, 285.0], [83.0, 215.0], [82.0, 245.0], [81.0, 246.0], [80.0, 430.0], [87.0, 1267.0], [86.0, 229.0], [85.0, 677.0], [84.0, 259.0], [91.0, 718.0], [90.0, 246.0], [89.0, 231.0], [88.0, 1225.0], [95.0, 1264.0], [94.0, 235.0], [93.0, 267.0], [92.0, 1856.0], [99.0, 230.0], [98.0, 1256.0], [97.0, 2338.0], [96.0, 224.0], [103.0, 552.0], [102.0, 621.0], [101.0, 224.0], [100.0, 225.0], [107.0, 233.0], [106.0, 219.0], [105.0, 274.0], [104.0, 268.0], [111.0, 238.0], [110.0, 2052.0], [109.0, 1233.0], [108.0, 1225.0], [115.0, 635.0], [114.0, 254.0], [113.0, 221.0], [112.0, 368.0], [119.0, 234.0], [118.0, 219.0], [117.0, 239.0], [116.0, 221.0], [123.0, 225.0], [122.0, 707.0], [121.0, 288.0], [120.0, 238.0], [127.0, 226.0], [126.0, 1426.0], [125.0, 238.0], [124.0, 665.0], [135.0, 380.0], [134.0, 221.0], [133.0, 224.0], [132.0, 206.0], [131.0, 259.0], [130.0, 219.0], [129.0, 403.0], [143.0, 221.0], [142.0, 242.0], [141.0, 230.0], [140.0, 237.5], [138.0, 2294.0], [137.0, 263.0], [136.0, 266.0], [151.0, 278.0], [150.0, 3253.0], [149.0, 917.0], [147.0, 265.0], [146.0, 246.0], [145.0, 1281.0], [144.0, 270.0], [159.0, 244.0], [158.0, 202.0], [157.0, 249.0], [156.0, 1041.0], [155.0, 230.0], [154.0, 260.0], [152.0, 228.0], [167.0, 212.0], [166.0, 307.0], [165.0, 233.0], [164.0, 233.0], [163.0, 227.0], [162.0, 209.0], [161.0, 230.0], [160.0, 230.0], [175.0, 1242.0], [174.0, 594.0], [173.0, 208.0], [172.0, 250.0], [171.0, 207.0], [170.0, 232.0], [169.0, 269.0], [168.0, 220.0], [183.0, 226.5], [181.0, 1210.0], [180.0, 1004.0], [179.0, 236.0], [178.0, 217.0], [177.0, 278.0], [176.0, 293.0], [191.0, 243.0], [190.0, 267.0], [189.0, 232.0], [188.0, 214.0], [187.0, 243.0], [186.0, 625.0], [185.0, 649.0], [184.0, 220.0], [199.0, 275.0], [198.0, 1219.0], [197.0, 228.0], [196.0, 253.0], [195.0, 606.0], [194.0, 228.0], [193.0, 720.5], [207.0, 236.0], [206.0, 750.0], [204.0, 1231.0], [203.0, 227.0], [201.0, 1246.0], [200.0, 250.0], [215.0, 225.0], [214.0, 234.0], [213.0, 676.0], [212.0, 276.0], [211.0, 233.0], [210.0, 266.0], [209.0, 238.0], [208.0, 1232.0], [222.0, 234.33333333333334], [221.0, 280.8461538461538], [220.0, 558.5714285714286], [219.0, 398.0], [218.0, 227.5], [217.0, 256.6666666666667], [216.0, 1264.0], [231.0, 244.0], [230.0, 413.27272727272725], [229.0, 659.375], [228.0, 655.2], [227.0, 678.5], [226.0, 556.75], [225.0, 472.0], [224.0, 1017.5], [239.0, 671.3529411764706], [238.0, 340.2499999999999], [237.0, 320.4444444444444], [236.0, 733.6], [235.0, 431.5], [234.0, 437.6], [233.0, 631.1666666666666], [232.0, 1244.5], [247.0, 681.0], [246.0, 778.5], [245.0, 247.0], [244.0, 259.0], [243.0, 1250.0], [242.0, 346.3333333333333], [241.0, 232.0], [240.0, 558.0869565217392], [254.0, 829.0], [253.0, 676.5], [252.0, 721.0], [251.0, 1251.0], [250.0, 480.0], [248.0, 242.75], [270.0, 563.9230769230769], [271.0, 419.54545454545456], [268.0, 457.0], [258.0, 234.0], [257.0, 228.0], [256.0, 738.5], [259.0, 238.5], [269.0, 202.66666666666666], [267.0, 386.1], [265.0, 492.625], [266.0, 384.2], [264.0, 492.7], [263.0, 577.4285714285713], [262.0, 447.7894736842105], [261.0, 515.75], [260.0, 759.0], [287.0, 532.0399999999998], [278.0, 432.7931034482758], [277.0, 503.99999999999994], [276.0, 389.5454545454545], [283.0, 367.86363636363626], [284.0, 481.60714285714295], [285.0, 471.7142857142858], [286.0, 462.1739130434782], [282.0, 313.5172413793103], [281.0, 329.1249999999999], [280.0, 302.6250000000001], [279.0, 502.0909090909091], [272.0, 345.5], [273.0, 241.2857142857143], [275.0, 710.9333333333333], [274.0, 631.4444444444445], [290.0, 384.9090909090909], [291.0, 502.93333333333334], [301.0, 217.0], [300.0, 201.0], [297.0, 295.2], [299.0, 156.0], [298.0, 216.0], [296.0, 215.8], [295.0, 298.55555555555554], [294.0, 216.74999999999997], [293.0, 228.68750000000003], [292.0, 310.8888888888889], [289.0, 298.68], [288.0, 416.7692307692307], [1.0, 1256.0]], "isOverall": false, "label": "HTTP Request-0", "isController": false}, {"data": [[234.226, 455.7409999999999]], "isOverall": false, "label": "HTTP Request-0-Aggregated", "isController": false}, {"data": [[2.0, 3954.0], [3.0, 4499.0], [4.0, 3150.0], [5.0, 3429.0], [6.0, 3433.0], [7.0, 4995.0], [8.0, 4338.0], [9.0, 3966.0], [10.0, 4263.0], [12.0, 4106.0], [13.0, 5257.0], [14.0, 2642.0], [15.0, 4176.0], [16.0, 3744.0], [17.0, 4421.0], [18.0, 7431.0], [19.0, 2684.0], [20.0, 3786.0], [22.0, 5435.5], [23.0, 2801.0], [24.0, 3610.0], [25.0, 2918.0], [27.0, 6079.5], [28.0, 2488.0], [29.0, 4607.0], [30.0, 7464.0], [33.0, 2747.0], [32.0, 4719.0], [35.0, 3312.0], [34.0, 4560.0], [37.0, 4624.5], [39.0, 3763.0], [38.0, 6604.0], [41.0, 3664.0], [40.0, 3816.0], [43.0, 6568.0], [42.0, 4392.0], [45.0, 5335.0], [44.0, 2906.0], [47.0, 5951.0], [46.0, 5493.0], [49.0, 6308.0], [48.0, 5561.0], [51.0, 7536.0], [50.0, 3278.0], [52.0, 5213.0], [55.0, 3877.0], [54.0, 6822.0], [57.0, 7464.0], [56.0, 4793.0], [59.0, 4880.0], [58.0, 7613.0], [61.0, 6940.0], [60.0, 2723.0], [63.0, 7927.0], [62.0, 4775.0], [67.0, 3597.0], [65.0, 6119.0], [64.0, 2582.0], [71.0, 5567.0], [70.0, 2081.0], [69.0, 7078.0], [68.0, 3052.0], [75.0, 4846.0], [74.0, 8564.0], [73.0, 2219.0], [72.0, 3727.0], [79.0, 5418.0], [78.0, 5919.0], [77.0, 6240.0], [76.0, 4574.0], [83.0, 2730.0], [82.0, 3296.0], [81.0, 4044.0], [80.0, 5455.0], [87.0, 2137.0], [86.0, 4991.0], [85.0, 8654.0], [84.0, 3709.0], [91.0, 5675.0], [90.0, 8056.0], [89.0, 4873.0], [88.0, 1942.0], [95.0, 10275.0], [94.0, 4719.0], [93.0, 7294.0], [92.0, 6473.0], [99.0, 4093.0], [98.0, 2978.0], [97.0, 9330.0], [96.0, 6030.0], [103.0, 7727.0], [102.0, 6245.0], [101.0, 5018.0], [100.0, 4729.0], [107.0, 7581.0], [106.0, 6129.0], [105.0, 5853.0], [104.0, 6778.0], [111.0, 3640.0], [110.0, 2798.0], [109.0, 7745.0], [108.0, 6916.0], [115.0, 7014.0], [114.0, 8844.0], [113.0, 7935.0], [112.0, 6413.0], [119.0, 7946.0], [118.0, 6106.0], [117.0, 4430.0], [116.0, 7220.0], [123.0, 8994.0], [122.0, 5553.0], [121.0, 1576.0], [120.0, 1565.0], [127.0, 1834.0], [126.0, 2657.0], [125.0, 8479.0], [124.0, 1552.0], [135.0, 1560.0], [134.0, 1714.0], [133.0, 5733.0], [132.0, 2081.0], [131.0, 8214.0], [130.0, 8818.0], [129.0, 3569.0], [143.0, 1887.0], [142.0, 6757.0], [141.0, 1803.0], [140.0, 2708.5], [138.0, 4406.0], [137.0, 3475.0], [136.0, 4258.0], [151.0, 6544.0], [150.0, 4183.0], [149.0, 7684.0], [147.0, 1515.0], [146.0, 3557.0], [145.0, 8088.0], [144.0, 12430.0], [159.0, 5823.0], [158.0, 2749.0], [157.0, 6286.0], [156.0, 5238.0], [155.0, 3983.0], [154.0, 3042.5], [152.0, 9034.0], [167.0, 1470.0], [166.0, 1869.0], [165.0, 2108.0], [164.0, 1633.0], [163.0, 1364.0], [162.0, 2666.0], [161.0, 1540.0], [160.0, 2562.0], [175.0, 7830.0], [174.0, 9799.0], [173.0, 1524.0], [172.0, 6091.0], [171.0, 1716.0], [170.0, 2431.0], [169.0, 3857.0], [168.0, 1307.0], [183.0, 1602.0], [181.0, 5192.0], [180.0, 9957.0], [179.0, 6352.0], [178.0, 7953.0], [177.0, 5429.0], [176.0, 1527.0], [191.0, 1570.0], [190.0, 13259.0], [189.0, 8535.0], [188.0, 2282.0], [187.0, 1441.0], [186.0, 1934.0], [185.0, 2029.0], [184.0, 1601.0], [199.0, 2396.0], [198.0, 2310.0], [197.0, 1451.0], [196.0, 3063.0], [195.0, 7246.0], [194.0, 1490.0], [193.0, 4991.0], [207.0, 1782.0], [206.0, 4950.0], [204.0, 2473.0], [203.0, 1772.5], [201.0, 11301.0], [200.0, 1619.0], [215.0, 3768.5], [214.0, 10276.0], [213.0, 4926.0], [212.0, 6175.0], [211.0, 7014.0], [210.0, 6194.0], [209.0, 1500.0], [208.0, 2366.0], [222.0, 3233.3333333333335], [221.0, 4598.999999999999], [220.0, 5054.571428571428], [219.0, 7270.333333333333], [218.0, 3819.5], [217.0, 4516.666666666667], [216.0, 8836.0], [231.0, 1946.75], [230.0, 4757.545454545454], [229.0, 5892.875], [228.0, 3174.4], [227.0, 4074.666666666667], [226.0, 4778.5], [225.0, 3439.5], [224.0, 2350.25], [239.0, 5794.294117647059], [238.0, 4909.3125], [237.0, 3627.0], [236.0, 6737.6], [235.0, 5351.333333333334], [234.0, 4282.2], [233.0, 10221.666666666668], [232.0, 2904.25], [247.0, 6853.0], [246.0, 10763.5], [245.0, 1752.0], [244.0, 7706.0], [243.0, 2709.0], [242.0, 4388.666666666667], [241.0, 8689.6], [240.0, 6336.826086956521], [254.0, 3046.0], [253.0, 5835.0], [252.0, 5293.5], [251.0, 11967.0], [250.0, 4368.0], [248.0, 4518.0], [270.0, 4409.769230769231], [271.0, 3692.454545454545], [268.0, 4204.625], [258.0, 6468.0], [257.0, 5269.0], [256.0, 5386.0], [259.0, 1487.5], [269.0, 5086.333333333333], [267.0, 3530.7000000000003], [265.0, 5629.625], [266.0, 3732.2], [264.0, 5952.9], [263.0, 5718.428571428571], [262.0, 6228.736842105262], [261.0, 5417.25], [260.0, 7735.75], [287.0, 5368.12], [278.0, 4850.55172413793], [277.0, 4894.818181818182], [276.0, 3530.181818181818], [283.0, 5276.772727272728], [284.0, 5311.142857142856], [285.0, 4723.0], [286.0, 4952.91304347826], [282.0, 4655.103448275861], [281.0, 6264.5], [280.0, 5537.062500000001], [279.0, 5625.727272727272], [272.0, 3845.125], [273.0, 2795.142857142857], [275.0, 4144.333333333334], [274.0, 4435.333333333333], [290.0, 4963.69696969697], [291.0, 5286.299999999999], [301.0, 3239.0], [300.0, 4552.0], [297.0, 4303.4], [299.0, 8564.0], [298.0, 1784.0], [296.0, 5172.8], [295.0, 4536.777777777777], [294.0, 5570.166666666666], [293.0, 4363.0625], [292.0, 6124.777777777777], [289.0, 5306.52], [288.0, 5249.615384615385], [1.0, 5247.0]], "isOverall": false, "label": "HTTP Request", "isController": false}, {"data": [[234.226, 4998.266999999992]], "isOverall": false, "label": "HTTP Request-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 301.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 8066.666666666667, "minX": 1.7023017E12, "maxY": 6851167.8, "series": [{"data": [[1.7023017E12, 6851167.8]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.7023017E12, 8066.666666666667]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.7023017E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 18000000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 455.7409999999999, "minX": 1.7023017E12, "maxY": 4998.266999999992, "series": [{"data": [[1.7023017E12, 4541.036000000005]], "isOverall": false, "label": "HTTP Request-1", "isController": false}, {"data": [[1.7023017E12, 455.7409999999999]], "isOverall": false, "label": "HTTP Request-0", "isController": false}, {"data": [[1.7023017E12, 4998.266999999992]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.7023017E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 18000000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 455.59300000000053, "minX": 1.7023017E12, "maxY": 1522.5260000000023, "series": [{"data": [[1.7023017E12, 1522.5260000000023]], "isOverall": false, "label": "HTTP Request-1", "isController": false}, {"data": [[1.7023017E12, 455.59300000000053]], "isOverall": false, "label": "HTTP Request-0", "isController": false}, {"data": [[1.7023017E12, 455.59300000000053]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.7023017E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 18000000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 248.0690000000002, "minX": 1.7023017E12, "maxY": 1094.0819999999994, "series": [{"data": [[1.7023017E12, 1094.0819999999994]], "isOverall": false, "label": "HTTP Request-1", "isController": false}, {"data": [[1.7023017E12, 248.0690000000002]], "isOverall": false, "label": "HTTP Request-0", "isController": false}, {"data": [[1.7023017E12, 248.0690000000002]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.7023017E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 18000000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 113.0, "minX": 1.7023017E12, "maxY": 16462.0, "series": [{"data": [[1.7023017E12, 16462.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.7023017E12, 8236.7]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.7023017E12, 12556.669999999993]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.7023017E12, 10255.649999999998]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.7023017E12, 113.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.7023017E12, 2005.5]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.7023017E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 18000000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 131.0, "minX": 34.0, "maxY": 4876.5, "series": [{"data": [[133.0, 1475.0], [134.0, 1675.0], [135.0, 1936.0], [34.0, 417.0], [139.0, 1847.0], [148.0, 1729.0], [146.0, 2240.0], [38.0, 231.5], [157.0, 1618.0], [158.0, 1801.5], [156.0, 1680.5], [166.0, 3157.0], [43.0, 131.0], [175.0, 2081.0], [168.0, 2100.5], [184.0, 2598.5], [195.0, 2609.0], [199.0, 3296.0], [208.0, 4876.5], [57.0, 184.0], [58.0, 150.5], [74.0, 3960.0], [95.0, 1492.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 208.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 131.0, "minX": 34.0, "maxY": 879.5, "series": [{"data": [[133.0, 341.0], [134.0, 303.0], [135.0, 310.0], [34.0, 417.0], [139.0, 275.0], [148.0, 560.5], [146.0, 590.5], [38.0, 231.5], [157.0, 492.0], [158.0, 438.5], [156.0, 305.5], [166.0, 402.0], [43.0, 131.0], [175.0, 513.0], [168.0, 487.5], [184.0, 558.5], [195.0, 621.0], [199.0, 601.0], [208.0, 642.0], [57.0, 184.0], [58.0, 147.0], [74.0, 879.5], [95.0, 319.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 208.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 50.0, "minX": 1.7023017E12, "maxY": 50.0, "series": [{"data": [[1.7023017E12, 50.0]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.7023017E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 18000000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 16.666666666666668, "minX": 1.7023017E12, "maxY": 33.333333333333336, "series": [{"data": [[1.7023017E12, 33.333333333333336]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.7023017E12, 16.666666666666668]], "isOverall": false, "label": "301", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.7023017E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 18000000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 16.666666666666668, "minX": 1.7023017E12, "maxY": 16.666666666666668, "series": [{"data": [[1.7023017E12, 16.666666666666668]], "isOverall": false, "label": "HTTP Request-success", "isController": false}, {"data": [[1.7023017E12, 16.666666666666668]], "isOverall": false, "label": "HTTP Request-0-success", "isController": false}, {"data": [[1.7023017E12, 16.666666666666668]], "isOverall": false, "label": "HTTP Request-1-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.7023017E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 18000000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 50.0, "minX": 1.7023017E12, "maxY": 50.0, "series": [{"data": [[1.7023017E12, 50.0]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.7023017E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 18000000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

